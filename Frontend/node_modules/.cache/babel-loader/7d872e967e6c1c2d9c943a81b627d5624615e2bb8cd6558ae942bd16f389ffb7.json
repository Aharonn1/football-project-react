{"ast":null,"code":"import { createStore } from \"redux\";\nexport class PlayersState {\n  constructor() {\n    this.players = [];\n    this.topPlayers = [];\n    this.table = [];\n  }\n}\nexport let PlayersActionType;\n(function (PlayersActionType) {\n  PlayersActionType[\"FetchPlayers\"] = \"FetchPlayers\";\n  PlayersActionType[\"FetchTopAssists\"] = \"FetchTopAssists\";\n  PlayersActionType[\"FetchTopPlayers\"] = \"FetchTopPlayers\";\n  PlayersActionType[\"FetchTable\"] = \"FetchTable\";\n  PlayersActionType[\"DeletePlayer\"] = \"DeletePlayer\";\n})(PlayersActionType || (PlayersActionType = {}));\nexport function playersReducer() {\n  let currentState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new PlayersState();\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const newState = {\n    ...currentState\n  };\n  switch (action.type) {\n    case PlayersActionType.FetchPlayers:\n      newState.players = action.payload;\n      break;\n    case PlayersActionType.FetchTopPlayers1:\n      if (action.payload.length > 0) {\n        const topPlayers = action.payload.sort((a, b) => b.goals - a.goals);\n        const top5Players = topPlayers.slice(0, 5);\n        return {\n          ...currentState,\n          topPlayers: top5Players\n        };\n      }\n      break;\n    case PlayersActionType.FetchTopPlayers:\n      if (action.payload.length > 0) {\n        const topPlayers = action.payload.sort((a, b) => b.goals - a.goals);\n        const top5Players = topPlayers.slice(0, 5);\n        return {\n          ...currentState,\n          topPlayers: top5Players\n        };\n      }\n      break;\n    case PlayersActionType.FetchTopAssists:\n      if (action.payload.length > 0) {\n        const topPlayers = action.payload.sort((a, b) => b.assists - a.assists);\n        const top5Players = topPlayers.slice(0, 5);\n        return {\n          ...currentState,\n          topPlayers: top5Players\n        };\n      }\n      break;\n    case PlayersActionType.FetchTable:\n      newState.table = action.payload;\n      break;\n    case PlayersActionType.DeletePlayer:\n      const indexToDelete = newState.players.findIndex(t => t.playerId === action.payload);\n      if (indexToDelete >= 0) {\n        newState.players.splice(indexToDelete, 1);\n      }\n      break;\n  }\n  return newState;\n}\nexport const playersStore = createStore(playersReducer);","map":{"version":3,"names":["createStore","PlayersState","players","topPlayers","table","PlayersActionType","playersReducer","currentState","action","newState","type","FetchPlayers","payload","FetchTopPlayers1","length","sort","a","b","goals","top5Players","slice","FetchTopPlayers","FetchTopAssists","assists","FetchTable","DeletePlayer","indexToDelete","findIndex","t","playerId","splice","playersStore"],"sources":["C:/Users/User/Desktop/javascript/manchester project/Frontend/src/Redux/taskState.ts"],"sourcesContent":["import TableModel from \"../Models/TableModel\";\r\nimport TeamModel from \"../Models/TeamModel\";\r\nimport { createStore } from \"redux\";\r\n\r\nexport class PlayersState {\r\n    players: TeamModel[] = [];\r\n    topPlayers: TeamModel[] = [];\r\n    table: TableModel[] = [];\r\n}\r\n\r\nexport enum PlayersActionType {\r\n    FetchPlayers = \"FetchPlayers\",\r\n    FetchTopAssists = \"FetchTopAssists\",\r\n    FetchTopPlayers = \"FetchTopPlayers\",\r\n    FetchTable = \"FetchTable\",\r\n    DeletePlayer = \"DeletePlayer\",\r\n}\r\n\r\nexport interface PlayersAction {\r\n    type: PlayersActionType;\r\n    payload: any\r\n}\r\n\r\nexport function playersReducer(currentState = new PlayersState(), action: PlayersAction): PlayersState {\r\n    const newState = { ...currentState };\r\n\r\n    switch (action.type) {\r\n        case PlayersActionType.FetchPlayers:\r\n            newState.players = action.payload;\r\n            break;\r\n\r\n        case PlayersActionType.FetchTopPlayers1:\r\n            if (action.payload.length > 0) {\r\n                const topPlayers = action.payload.sort((a: { goals: number; }, b: { goals: number; }) => b.goals - a.goals);\r\n                const top5Players = topPlayers.slice(0, 5);\r\n                return {\r\n                    ...currentState,\r\n                    topPlayers: top5Players,\r\n                };\r\n            }\r\n            break;\r\n\r\n        case PlayersActionType.FetchTopPlayers:\r\n            if (action.payload.length > 0) {\r\n                const topPlayers = action.payload.sort((a: { goals: number; }, b: { goals: number; }) => b.goals - a.goals);\r\n                const top5Players = topPlayers.slice(0, 5);\r\n                return {\r\n                    ...currentState,\r\n                    topPlayers: top5Players,\r\n                };\r\n            }\r\n            break;\r\n\r\n        case PlayersActionType.FetchTopAssists:\r\n            if (action.payload.length > 0) {\r\n                const topPlayers = action.payload.sort((a: { assists: number; }, b: { assists: number; }) => b.assists - a.assists);\r\n                const top5Players = topPlayers.slice(0, 5);\r\n                return {\r\n                    ...currentState,\r\n                    topPlayers: top5Players,\r\n                };\r\n            }\r\n            break;\r\n\r\n        case PlayersActionType.FetchTable:\r\n            newState.table = action.payload;\r\n            break;\r\n\r\n        case PlayersActionType.DeletePlayer:\r\n            const indexToDelete = newState.players.findIndex(t => t.playerId === action.payload)\r\n            if (indexToDelete >= 0) {\r\n                newState.players.splice(indexToDelete, 1)\r\n            }\r\n            break;\r\n    }\r\n    return newState;\r\n}\r\nexport const playersStore = createStore(playersReducer);"],"mappings":"AAEA,SAASA,WAAW,QAAQ,OAAO;AAEnC,OAAO,MAAMC,YAAY,CAAC;EAAA;IAAA,KACtBC,OAAO,GAAgB,EAAE;IAAA,KACzBC,UAAU,GAAgB,EAAE;IAAA,KAC5BC,KAAK,GAAiB,EAAE;EAAA;AAC5B;AAEA,WAAYC,iBAAiB;AAM5B,WANWA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;AAAA,GAAjBA,iBAAiB,KAAjBA,iBAAiB;AAa7B,OAAO,SAASC,cAAc,GAAyE;EAAA,IAAxEC,YAAY,uEAAG,IAAIN,YAAY,EAAE;EAAA,IAAEO,MAAqB;EACnF,MAAMC,QAAQ,GAAG;IAAE,GAAGF;EAAa,CAAC;EAEpC,QAAQC,MAAM,CAACE,IAAI;IACf,KAAKL,iBAAiB,CAACM,YAAY;MAC/BF,QAAQ,CAACP,OAAO,GAAGM,MAAM,CAACI,OAAO;MACjC;IAEJ,KAAKP,iBAAiB,CAACQ,gBAAgB;MACnC,IAAIL,MAAM,CAACI,OAAO,CAACE,MAAM,GAAG,CAAC,EAAE;QAC3B,MAAMX,UAAU,GAAGK,MAAM,CAACI,OAAO,CAACG,IAAI,CAAC,CAACC,CAAqB,EAAEC,CAAqB,KAAKA,CAAC,CAACC,KAAK,GAAGF,CAAC,CAACE,KAAK,CAAC;QAC3G,MAAMC,WAAW,GAAGhB,UAAU,CAACiB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;QAC1C,OAAO;UACH,GAAGb,YAAY;UACfJ,UAAU,EAAEgB;QAChB,CAAC;MACL;MACA;IAEJ,KAAKd,iBAAiB,CAACgB,eAAe;MAClC,IAAIb,MAAM,CAACI,OAAO,CAACE,MAAM,GAAG,CAAC,EAAE;QAC3B,MAAMX,UAAU,GAAGK,MAAM,CAACI,OAAO,CAACG,IAAI,CAAC,CAACC,CAAqB,EAAEC,CAAqB,KAAKA,CAAC,CAACC,KAAK,GAAGF,CAAC,CAACE,KAAK,CAAC;QAC3G,MAAMC,WAAW,GAAGhB,UAAU,CAACiB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;QAC1C,OAAO;UACH,GAAGb,YAAY;UACfJ,UAAU,EAAEgB;QAChB,CAAC;MACL;MACA;IAEJ,KAAKd,iBAAiB,CAACiB,eAAe;MAClC,IAAId,MAAM,CAACI,OAAO,CAACE,MAAM,GAAG,CAAC,EAAE;QAC3B,MAAMX,UAAU,GAAGK,MAAM,CAACI,OAAO,CAACG,IAAI,CAAC,CAACC,CAAuB,EAAEC,CAAuB,KAAKA,CAAC,CAACM,OAAO,GAAGP,CAAC,CAACO,OAAO,CAAC;QACnH,MAAMJ,WAAW,GAAGhB,UAAU,CAACiB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;QAC1C,OAAO;UACH,GAAGb,YAAY;UACfJ,UAAU,EAAEgB;QAChB,CAAC;MACL;MACA;IAEJ,KAAKd,iBAAiB,CAACmB,UAAU;MAC7Bf,QAAQ,CAACL,KAAK,GAAGI,MAAM,CAACI,OAAO;MAC/B;IAEJ,KAAKP,iBAAiB,CAACoB,YAAY;MAC/B,MAAMC,aAAa,GAAGjB,QAAQ,CAACP,OAAO,CAACyB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,KAAKrB,MAAM,CAACI,OAAO,CAAC;MACpF,IAAIc,aAAa,IAAI,CAAC,EAAE;QACpBjB,QAAQ,CAACP,OAAO,CAAC4B,MAAM,CAACJ,aAAa,EAAE,CAAC,CAAC;MAC7C;MACA;EAAM;EAEd,OAAOjB,QAAQ;AACnB;AACA,OAAO,MAAMsB,YAAY,GAAG/B,WAAW,CAACM,cAAc,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}