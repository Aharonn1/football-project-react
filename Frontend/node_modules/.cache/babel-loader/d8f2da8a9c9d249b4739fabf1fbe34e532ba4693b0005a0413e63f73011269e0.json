{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\javascript\\\\Project React Tasks 3\\\\Frontend\\\\src\\\\Components\\\\DataArea\\\\DataList\\\\DataList.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport dataService from \"../../../Services/DataService\";\nimport DataCard from \"../DataCard/DataCard\";\nimport { tasksStore } from \"../../../Redux/taskState\";\nimport \"./DataList.css\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataList() {\n  _s();\n  const [tasks, setTask] = useState([]);\n  const [text, setText] = React.useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postPerPage, setPostPerPage] = useState(4);\n  useEffect(() => {\n    dataService.getAllTasks2().then(task => setTask(task)).catch(err => console.log(err));\n    tasksStore.subscribe(() => {\n      const dup = [...tasksStore.getState().tasks.filter(task => !task.isArchived && !dataService.isMoreThanWeekFromNow(task))];\n      setTask(dup);\n    });\n  }, []);\n  async function toggleArchivedTasks() {\n    await dataService.getAllTask().then(task => setTask(task)).catch(err => console.log(err));\n  }\n  async function deleteClickedTask(taskId) {\n    await dataService.deleteTask(taskId);\n    const duplicatedMovies = [...tasks];\n    const index = duplicatedMovies.findIndex(t => t.taskId === taskId);\n    duplicatedMovies.splice(index, 1);\n    setTask(duplicatedMovies);\n  }\n  const handleOnClick1 = () => {\n    const findTasks = tasks && (tasks === null || tasks === void 0 ? void 0 : tasks.length) > 0 ? tasks === null || tasks === void 0 ? void 0 : tasks.filter(s => (s === null || s === void 0 ? void 0 : s.name) == text) : undefined;\n    setTask(findTasks);\n  };\n  const indexOfLastPost = currentPage * postPerPage;\n  const indexOfFirstPost = indexOfLastPost - postPerPage;\n  const currentPost = vacation.slice(indexOfFirstPost, indexOfLastPost);\n  console.log(currentPost);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DataList box\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row row-cols-1 row-cols-md-6 g-4 wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"search task\",\n          value: text,\n          onChange: e => {\n            setText(e.target.value);\n            setTask(tasks);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !text,\n          onClick: handleOnClick1,\n          children: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), tasks && (tasks === null || tasks === void 0 ? void 0 : tasks.length) === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notFound\",\n          children: \"The task is not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleArchivedTasks,\n        children: \"Toggle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), tasks.map(item => /*#__PURE__*/_jsxDEV(DataCard, {\n        task: item,\n        deleteMe: deleteClickedTask\n      }, item.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 38\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(DataList, \"ChZ0Z5lMP8lFrD7lOwHo7SZ4dM4=\");\n_c = DataList;\nexport default DataList;\nvar _c;\n$RefreshReg$(_c, \"DataList\");","map":{"version":3,"names":["useState","useEffect","dataService","DataCard","tasksStore","React","DataList","tasks","setTask","text","setText","currentPage","setCurrentPage","postPerPage","setPostPerPage","getAllTasks2","then","task","catch","err","console","log","subscribe","dup","getState","filter","isArchived","isMoreThanWeekFromNow","toggleArchivedTasks","getAllTask","deleteClickedTask","taskId","deleteTask","duplicatedMovies","index","findIndex","t","splice","handleOnClick1","findTasks","length","s","name","undefined","indexOfLastPost","indexOfFirstPost","currentPost","vacation","slice","e","target","value","map","item"],"sources":["C:/Users/User/Desktop/javascript/Project React Tasks 3/Frontend/src/Components/DataArea/DataList/DataList.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport TaskModel from \"../../../Models/TaskModel\";\nimport dataService from \"../../../Services/DataService\";\nimport DataCard from \"../DataCard/DataCard\";\nimport { tasksStore } from \"../../../Redux/taskState\";\nimport \"./DataList.css\";\nimport React from \"react\";\n\nfunction DataList(): JSX.Element {\n\n    const [tasks, setTask] = useState<TaskModel[]>([]);\n    const [text, setText] = React.useState<string>('');\n    const [currentPage, setCurrentPage] = useState(1);\n    const [postPerPage, setPostPerPage] = useState(4);\n\n    useEffect(() => {\n        dataService.getAllTasks2()\n            .then(task => setTask(task))\n            .catch(err => console.log(err))\n        tasksStore.subscribe(() => {\n            const dup = [...tasksStore.getState().tasks.filter((task: TaskModel) => (!task.isArchived && !dataService.isMoreThanWeekFromNow(task)))];\n            setTask(dup);\n        })\n    }, [])\n\n    async function toggleArchivedTasks(): Promise<void> {\n        await dataService.getAllTask()\n            .then(task => setTask(task))\n            .catch(err => console.log(err))\n    }\n\n    async function deleteClickedTask(taskId: number) {\n        await dataService.deleteTask(taskId);\n        const duplicatedMovies = [...tasks];\n        const index = duplicatedMovies.findIndex(t => t.taskId === taskId);\n        duplicatedMovies.splice(index, 1);\n        setTask(duplicatedMovies);\n    }\n\n    const handleOnClick1 = () => {\n        const findTasks =\n            tasks && tasks?.length > 0 ? tasks?.filter((s) => s?.name == text) : undefined\n        setTask(findTasks)\n    }\n\n    const indexOfLastPost = currentPage * postPerPage;\n    const indexOfFirstPost = indexOfLastPost - postPerPage;\n    const currentPost = vacation.slice(indexOfFirstPost, indexOfLastPost);\n    console.log(currentPost);\n\n\n    return (\n        <div className=\"DataList box\">\n            <div className=\"row row-cols-1 row-cols-md-6 g-4 wrapper\">\n               <div className=\"input_wrapper\">\n                <input\n                    type=\"text\"\n                    placeholder=\"search task\"\n                    value={text}\n                    onChange={(e) => {\n                        setText(e.target.value);\n                        setTask(tasks);\n                    }\n                    }/>\n                <button disabled={!text} onClick={handleOnClick1}>search</button> \n                {tasks && tasks?.length === 0 && (\n                    <div className=\"notFound\">The task is not found</div>\n                )}\n            </div>\n            <br />\n                <button onClick={toggleArchivedTasks}>Toggle</button>\n                <br />\n                {tasks.map((item) => <DataCard key={item.taskId} task={item} deleteMe={deleteClickedTask} />)}\n            </div>\n        </div>\n    );\n}\nexport default DataList"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}