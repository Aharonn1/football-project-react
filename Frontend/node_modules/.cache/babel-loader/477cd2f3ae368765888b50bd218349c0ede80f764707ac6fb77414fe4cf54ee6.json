{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\javascript\\\\manchester project\\\\Frontend\\\\src\\\\Components\\\\DataArea\\\\DataCard\\\\DataCard.tsx\";\nimport dataService from \"../../../Services/DataService\";\nimport notify from \"../../../Utils/Notify\";\nimport \"./DataCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataCard(props) {\n  async function deleteMe() {\n    if (!window.confirm(\"Are you sure?\")) return;\n    await dataService.deleteTask(props.task.playerId);\n    notify.success(\"Task has been deleted\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DataCard Box\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"  task: \", props.task.name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"  kind task: \", props.task.kindTaskId, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"  description: \", props.task.description, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"  start date: \", props.task.startDate, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" end date: \", props.task.endDate, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: props.task.isFinish === 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), \" The task is finished\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteMe,\n      children: \"\\u274C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_c = DataCard;\nexport default DataCard;\nvar _c;\n$RefreshReg$(_c, \"DataCard\");","map":{"version":3,"names":["dataService","notify","DataCard","props","deleteMe","window","confirm","deleteTask","task","playerId","success","name","kindTaskId","description","startDate","endDate","isFinish"],"sources":["C:/Users/User/Desktop/javascript/manchester project/Frontend/src/Components/DataArea/DataCard/DataCard.tsx"],"sourcesContent":["import TeamModel from \"../../../Models/TeamModel\";\nimport dataService from \"../../../Services/DataService\";\nimport notify from \"../../../Utils/Notify\";\nimport \"./DataCard.css\";\n\ninterface TaskCardProps {\n    player: TeamModel,\n    deleteMe: (taskId: number) => Promise<void>\n}\n\nfunction DataCard(props: TaskCardProps): JSX.Element {\n\n    async function deleteMe() {\n        if (!window.confirm(\"Are you sure?\")) return;\n        await dataService.deleteTask(props.task.playerId);\n        notify.success(\"Task has been deleted\");\n    }\n\n    return (\n        <div className=\"DataCard Box\">\n            <span>  task: {props.task.name} </span>\n            <br />\n            <span>  kind task: {props.task.kindTaskId} </span>\n            <br />\n            <span>  description: {props.task.description} </span>\n            <br />\n            <span>  start date: {props.task.startDate} </span>\n            <br />\n            <span> end date: {props.task.endDate} </span>\n            <br />\n            <input type=\"checkbox\" checked={props.task.isFinish === 1} /> The task is finished\n            <br />\n            <button onClick={deleteMe}>‚ùå</button>\n        </div >\n    );\n}\nexport default DataCard;"],"mappings":";AACA,OAAOA,WAAW,MAAM,+BAA+B;AACvD,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAO,gBAAgB;AAAC;AAOxB,SAASC,QAAQ,CAACC,KAAoB,EAAe;EAEjD,eAAeC,QAAQ,GAAG;IACtB,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,eAAe,CAAC,EAAE;IACtC,MAAMN,WAAW,CAACO,UAAU,CAACJ,KAAK,CAACK,IAAI,CAACC,QAAQ,CAAC;IACjDR,MAAM,CAACS,OAAO,CAAC,uBAAuB,CAAC;EAC3C;EAEA,oBACI;IAAK,SAAS,EAAC,cAAc;IAAA,wBACzB;MAAA,WAAM,UAAQ,EAACP,KAAK,CAACK,IAAI,CAACG,IAAI,EAAC,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO,eACvC;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,WAAM,eAAa,EAACR,KAAK,CAACK,IAAI,CAACI,UAAU,EAAC,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO,eAClD;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,WAAM,iBAAe,EAACT,KAAK,CAACK,IAAI,CAACK,WAAW,EAAC,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO,eACrD;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,WAAM,gBAAc,EAACV,KAAK,CAACK,IAAI,CAACM,SAAS,EAAC,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO,eAClD;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,WAAM,aAAW,EAACX,KAAK,CAACK,IAAI,CAACO,OAAO,EAAC,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO,eAC7C;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAO,IAAI,EAAC,UAAU;MAAC,OAAO,EAAEZ,KAAK,CAACK,IAAI,CAACQ,QAAQ,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,yBAC7D;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAQ,OAAO,EAAEZ,QAAS;MAAA,UAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAClC;AAEf;AAAC,KAzBQF,QAAQ;AA0BjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}