{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\javascript\\\\Project React Tasks2\\\\Frontend\\\\src\\\\Components\\\\DataArea\\\\ArchivedList\\\\ArchivedList.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport dataService from \"../../../Services/DataService\";\nimport { tasksStore } from \"../../../Redux/taskState\";\nimport DataCard from \"../DataCard/DataCard\";\nimport \"./ArchivedList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ArchivedList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    dataService.getAllArchivedTasks().then(task => setTasks(task)).catch(err => console.log(err));\n    tasksStore.subscribe(() => {\n      const dup = [...tasksStore.getState().tasks.filter(task => task.isArchived || dataService.isMoreThanWeekFromNow(task))];\n      setTasks(dup);\n    });\n  }, []);\n  async function deleteClickedTask(taskId) {\n    await dataService.deleteTask(taskId);\n    const duplicatedMovies = [...tasks];\n    const index = duplicatedMovies.findIndex(t => t.taskId === taskId);\n    duplicatedMovies.splice(index, 1);\n    setTasks(duplicatedMovies);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ArchivedList Box\",\n    children: tasks.map(item => /*#__PURE__*/_jsxDEV(DataCard, {\n      task: item,\n      deleteMe: deleteClickedTask\n    }, item.taskId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 34\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(ArchivedList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = ArchivedList;\nexport default ArchivedList;\nvar _c;\n$RefreshReg$(_c, \"ArchivedList\");","map":{"version":3,"names":["useEffect","useState","dataService","tasksStore","DataCard","ArchivedList","tasks","setTasks","getAllArchivedTasks","then","task","catch","err","console","log","subscribe","dup","getState","filter","isArchived","isMoreThanWeekFromNow","deleteClickedTask","taskId","deleteTask","duplicatedMovies","index","findIndex","t","splice","map","item"],"sources":["C:/Users/User/Desktop/javascript/Project React Tasks2/Frontend/src/Components/DataArea/ArchivedList/ArchivedList.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport TaskModel from \"../../../Models/TaskModel\";\nimport dataService from \"../../../Services/DataService\";\nimport { tasksStore } from \"../../../Redux/taskState\";\nimport DataCard from \"../DataCard/DataCard\";\nimport \"./ArchivedList.css\";\n\nfunction ArchivedList(): JSX.Element {\n\n    const [tasks, setTasks] = useState<TaskModel[]>([]);\n\n    useEffect(() => {\n        dataService.getAllArchivedTasks()\n            .then(task => setTasks(task))\n            .catch(err => console.log(err))\n        tasksStore.subscribe(() => {\n            const dup = [...tasksStore.getState().tasks.filter((task: TaskModel) => (task.isArchived || dataService.isMoreThanWeekFromNow(task)))];\n            setTasks(dup);\n        });\n    }, [])\n\n    async function deleteClickedTask(taskId: number) {\n        await dataService.deleteTask(taskId);\n        const duplicatedMovies = [...tasks];\n        const index = duplicatedMovies.findIndex(t => t.taskId === taskId);\n        duplicatedMovies.splice(index, 1);\n        setTasks(duplicatedMovies);\n    }\n\n    return (\n        <div className=\"ArchivedList Box\">\n            {tasks.map((item) => <DataCard key={item.taskId} task={item} deleteMe={deleteClickedTask} />)}\n        </div>\n    );\n}\nexport default ArchivedList;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,WAAW,MAAM,+BAA+B;AACvD,SAASC,UAAU,QAAQ,0BAA0B;AACrD,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAO,oBAAoB;AAAC;AAE5B,SAASC,YAAY,GAAgB;EAAA;EAEjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAc,EAAE,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACZE,WAAW,CAACM,mBAAmB,EAAE,CAC5BC,IAAI,CAACC,IAAI,IAAIH,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;IACnCT,UAAU,CAACY,SAAS,CAAC,MAAM;MACvB,MAAMC,GAAG,GAAG,CAAC,GAAGb,UAAU,CAACc,QAAQ,EAAE,CAACX,KAAK,CAACY,MAAM,CAAER,IAAe,IAAMA,IAAI,CAACS,UAAU,IAAIjB,WAAW,CAACkB,qBAAqB,CAACV,IAAI,CAAE,CAAC,CAAC;MACtIH,QAAQ,CAACS,GAAG,CAAC;IACjB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeK,iBAAiB,CAACC,MAAc,EAAE;IAC7C,MAAMpB,WAAW,CAACqB,UAAU,CAACD,MAAM,CAAC;IACpC,MAAME,gBAAgB,GAAG,CAAC,GAAGlB,KAAK,CAAC;IACnC,MAAMmB,KAAK,GAAGD,gBAAgB,CAACE,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACL,MAAM,KAAKA,MAAM,CAAC;IAClEE,gBAAgB,CAACI,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;IACjClB,QAAQ,CAACiB,gBAAgB,CAAC;EAC9B;EAEA,oBACI;IAAK,SAAS,EAAC,kBAAkB;IAAA,UAC5BlB,KAAK,CAACuB,GAAG,CAAEC,IAAI,iBAAK,QAAC,QAAQ;MAAmB,IAAI,EAAEA,IAAK;MAAC,QAAQ,EAAET;IAAkB,GAArDS,IAAI,CAACR,MAAM;MAAA;MAAA;MAAA;IAAA,QAA6C;EAAC;IAAA;IAAA;IAAA;EAAA,QAC3F;AAEd;AAAC,GA3BQjB,YAAY;AAAA,KAAZA,YAAY;AA4BrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}