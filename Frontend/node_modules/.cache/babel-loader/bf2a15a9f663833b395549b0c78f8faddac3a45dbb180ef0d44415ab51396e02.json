{"ast":null,"code":"import { createStore } from \"redux\";\nexport class PlayersState {\n  constructor() {\n    this.players = [];\n    this.topPlayers = [];\n    this.table = [];\n    this.topTeams = [];\n  }\n}\nexport let PlayersActionType;\n(function (PlayersActionType) {\n  PlayersActionType[\"FetchPlayers\"] = \"FetchPlayers\";\n  PlayersActionType[\"FetchTopAssists\"] = \"FetchTopAssists\";\n  PlayersActionType[\"FetchTopPlayers\"] = \"FetchTopPlayers\";\n  PlayersActionType[\"FetchTable\"] = \"FetchTable\";\n  PlayersActionType[\"FetchTeamWinsTable\"] = \"FetchTeamWinsTable\";\n  PlayersActionType[\"DeletePlayer\"] = \"DeletePlayer\";\n})(PlayersActionType || (PlayersActionType = {}));\nexport function playersReducer() {\n  let currentState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new PlayersState();\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const newState = {\n    ...currentState\n  };\n  switch (action.type) {\n    case PlayersActionType.FetchPlayers:\n      newState.players = action.payload;\n      break;\n\n    // case PlayersActionType.FetchTeamWinsTable:\n    //     if (action.payload.length > 0) {\n    //         const topTeams = action.payload.filter((team: { totalWins: number; }) => team.totalWins === 1);\n    //         const top5Teams = topTeams.slice(0, 10);\n    //         team.totalWins++;\n    //         return {\n    //             ...currentState,\n    //             topTeams: top5Teams,\n    //         };\n    //     }\n    //     break;\n\n    case PlayersActionType.FetchTeamWinsTable:\n      if (action.payload.length > 0) {\n        const topTeams = action.payload.filter(team => team.totalWins < 1);\n        const top5Teams = topTeams.slice(0, 10);\n        top5Teams.forEach(team => {\n          team.totalWins++;\n        });\n        return {\n          ...currentState,\n          topTeams: top5Teams\n        };\n      }\n      break;\n    case PlayersActionType.FetchTopPlayers:\n      if (action.payload.length > 0) {\n        const topPlayers = action.payload.sort((a, b) => b.goals - a.goals);\n        const top5Players = topPlayers.slice(0, 5);\n        return {\n          ...currentState,\n          topPlayers: top5Players\n        };\n      }\n      break;\n    case PlayersActionType.FetchTopAssists:\n      if (action.payload.length > 0) {\n        const topPlayers = action.payload.sort((a, b) => b.assists - a.assists);\n        const top5Players = topPlayers.slice(0, 5);\n        return {\n          ...currentState,\n          topPlayers: top5Players\n        };\n      }\n      break;\n    case PlayersActionType.FetchTable:\n      newState.table = action.payload;\n      break;\n    case PlayersActionType.DeletePlayer:\n      const indexToDelete = newState.players.findIndex(t => t.playerId === action.payload);\n      if (indexToDelete >= 0) {\n        newState.players.splice(indexToDelete, 1);\n      }\n      break;\n  }\n  return newState;\n}\nexport const playersStore = createStore(playersReducer);","map":{"version":3,"names":["createStore","PlayersState","players","topPlayers","table","topTeams","PlayersActionType","playersReducer","currentState","action","newState","type","FetchPlayers","payload","FetchTeamWinsTable","length","filter","team","totalWins","top5Teams","slice","forEach","FetchTopPlayers","sort","a","b","goals","top5Players","FetchTopAssists","assists","FetchTable","DeletePlayer","indexToDelete","findIndex","t","playerId","splice","playersStore"],"sources":["C:/Users/User/Desktop/javascript/manchester project/Frontend/src/Redux/taskState.ts"],"sourcesContent":["import TableModel from \"../Models/TableModel\";\r\nimport TeamModel from \"../Models/TeamModel\";\r\nimport { createStore } from \"redux\";\r\n\r\nexport class PlayersState {\r\n    players: TeamModel[] = [];\r\n    topPlayers: TeamModel[] = [];\r\n    table: TableModel[] = [];\r\n    topTeams: TableModel[] = [];\r\n}\r\n\r\nexport enum PlayersActionType {\r\n    FetchPlayers = \"FetchPlayers\",\r\n    FetchTopAssists = \"FetchTopAssists\",\r\n    FetchTopPlayers = \"FetchTopPlayers\",\r\n    FetchTable = \"FetchTable\",\r\n    FetchTeamWinsTable = \"FetchTeamWinsTable\",\r\n    DeletePlayer = \"DeletePlayer\",\r\n}\r\n\r\nexport interface PlayersAction {\r\n    type: PlayersActionType;\r\n    payload: any\r\n}\r\n\r\nexport function playersReducer(currentState = new PlayersState(), action: PlayersAction): PlayersState {\r\n    const newState = { ...currentState };\r\n\r\n    switch (action.type) {\r\n        case PlayersActionType.FetchPlayers:\r\n            newState.players = action.payload;\r\n            break;\r\n\r\n        // case PlayersActionType.FetchTeamWinsTable:\r\n        //     if (action.payload.length > 0) {\r\n        //         const topTeams = action.payload.filter((team: { totalWins: number; }) => team.totalWins === 1);\r\n        //         const top5Teams = topTeams.slice(0, 10);\r\n        //         team.totalWins++;\r\n        //         return {\r\n        //             ...currentState,\r\n        //             topTeams: top5Teams,\r\n        //         };\r\n        //     }\r\n        //     break;\r\n\r\n        case PlayersActionType.FetchTeamWinsTable:\r\n            if (action.payload.length > 0) {\r\n                const topTeams = action.payload.filter((team: { totalWins: number; }) => team.totalWins < 1);\r\n                const top5Teams = topTeams.slice(0, 10);\r\n                top5Teams.forEach((team: { totalWins: number; }) => {\r\n                    team.totalWins++;\r\n                });\r\n                return {\r\n                    ...currentState,\r\n                    topTeams: top5Teams,\r\n                };\r\n            }\r\n            break;\r\n\r\n\r\n\r\n        case PlayersActionType.FetchTopPlayers:\r\n            if (action.payload.length > 0) {\r\n                const topPlayers = action.payload.sort((a: { goals: number; }, b: { goals: number; }) => b.goals - a.goals);\r\n                const top5Players = topPlayers.slice(0, 5);\r\n                return {\r\n                    ...currentState,\r\n                    topPlayers: top5Players,\r\n                };\r\n            }\r\n            break;\r\n\r\n        case PlayersActionType.FetchTopAssists:\r\n            if (action.payload.length > 0) {\r\n                const topPlayers = action.payload.sort((a: { assists: number; }, b: { assists: number; }) => b.assists - a.assists);\r\n                const top5Players = topPlayers.slice(0, 5);\r\n                return {\r\n                    ...currentState,\r\n                    topPlayers: top5Players,\r\n                };\r\n            }\r\n            break;\r\n\r\n        case PlayersActionType.FetchTable:\r\n            newState.table = action.payload;\r\n            break;\r\n\r\n        case PlayersActionType.DeletePlayer:\r\n            const indexToDelete = newState.players.findIndex(t => t.playerId === action.payload)\r\n            if (indexToDelete >= 0) {\r\n                newState.players.splice(indexToDelete, 1)\r\n            }\r\n            break;\r\n    }\r\n    return newState;\r\n}\r\nexport const playersStore = createStore(playersReducer);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}