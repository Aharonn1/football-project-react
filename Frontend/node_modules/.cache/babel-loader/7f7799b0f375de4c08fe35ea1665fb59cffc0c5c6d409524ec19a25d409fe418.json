{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\javascript\\\\manchester project\\\\Frontend\\\\src\\\\Components\\\\DataArea\\\\TableList\\\\TableList.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport dataService from \"../../../Services/DataService\";\nimport appConfig from \"../../../Utils/AppConfig\";\nimport Table from 'react-bootstrap/Table';\nimport \"./TableList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TableList() {\n  _s();\n  const [table, setTable] = useState([]);\n  // const [winner, setWinner] = useState(null);\n  const [looser, setLooser] = useState(null);\n  // const [winner, setWinner] = useState([]);\n  const [winners, setWinners] = useState([]);\n  useEffect(() => {\n    dataService.getTheTable().then(table => setTable(table)).catch(err => console.log(err));\n  }, []);\n  const handleClick = () => {\n    // צור מערך חדש שיכיל את כל האובייקטים\n    const allItems = [...table];\n\n    // ערבב את האובייקטים במערך\n    allItems.sort(() => Math.random() - 0.5);\n\n    // צור מערך ריק שיכיל את האובייקטים שניצחו\n    let winners = [];\n\n    // בצע לולאה על כל האובייקטים במערך\n    for (let i = 0; i < 10; i++) {\n      // בדוק אם האובייקט כבר ניצח\n      const alreadyWon = winners.some(winner => winner.teamId === allItems[i].teamId);\n\n      // אם לא, הוסף אותו למערך המנצחים\n      if (!alreadyWon) {\n        winners.push(allItems[i]);\n      }\n    }\n\n    // לאחר שהלולאה מסתיימת, עדכן את מספר הנקודות של כל אובייקט במערך המנצחים ל-3\n    for (const winner of winners) {\n      winner.points += 3;\n      winner.games += 1;\n      console.log(winner.name);\n    }\n    // החזיר את המערך המנצחים\n    setWinners(winners);\n    console.log(winners);\n  };\n\n  // const handleClick = () => {\n  //     // מצא שני אובייקטים אקראיים\n  //     const [a, b] = table.sort(() => Math.random() - 0.5).slice(0, 2);\n\n  //     // חשב מי מנצח\n  //     if (a.points > b.points) {\n  //         b.games +=1\n  //         b.loses +=1\n  //         a.games += 1\n  //         a.points += 3\n  //         a.wins +=1;\n  //         console.log(a)\n  //         console.log(b)\n  //         setWinner(a)\n  //         setLooser(b)\n  //     } else {\n  //         a.games +=1;\n  //         a.loses +=1;\n  //         b.games +=1;\n  //         b.points +=3\n  //         b.wins +=1;\n  //         console.log(b)\n  //         console.log(a)\n  //         setWinner(b);\n  //         setLooser(a)\n  //     }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TableList\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"\\u05D4\\u05EA\\u05D7\\u05DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), winners && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u05D4\\u05DE\\u05E0\\u05E6\\u05D7\\u05D9\\u05DD \\u05D4\\u05DD: \", winners.map(winner => winner.name)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Place\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Games\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Wins\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Loses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Draw\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: table.sort((a, b) => b.points - a.points).map((t, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.games\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.wins\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.loses\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.draw\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.points\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img\",\n              src: appConfig.playersImagesUrl + t.imageName,\n              style: {\n                width: '20px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)]\n        }, t.teamId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(TableList, \"jzchPm3GI5gL7u93nRcwtqYcumM=\");\n_c = TableList;\nexport default TableList;\nvar _c;\n$RefreshReg$(_c, \"TableList\");","map":{"version":3,"names":["useEffect","useState","dataService","appConfig","Table","TableList","table","setTable","looser","setLooser","winners","setWinners","getTheTable","then","catch","err","console","log","handleClick","allItems","sort","Math","random","i","alreadyWon","some","winner","teamId","push","points","games","name","map","a","b","t","index","wins","loses","draw","playersImagesUrl","imageName","width"],"sources":["C:/Users/User/Desktop/javascript/manchester project/Frontend/src/Components/DataArea/TableList/TableList.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport TableModel from \"../../../Models/TableModel\";\nimport dataService from \"../../../Services/DataService\";\nimport appConfig from \"../../../Utils/AppConfig\";\nimport Table from 'react-bootstrap/Table';\nimport \"./TableList.css\";\n\nfunction TableList(): JSX.Element {\n\n    const [table, setTable] = useState<TableModel[]>([]);\n    // const [winner, setWinner] = useState(null);\n    const [looser, setLooser] = useState(null);\n    // const [winner, setWinner] = useState([]);\n    const [winners, setWinners] = useState([]);\n\n\n    useEffect(() => {\n        dataService.getTheTable()\n            .then(table => setTable(table))\n            .catch(err => console.log(err))\n    }, [])\n\n\n    const handleClick = () => {\n      // צור מערך חדש שיכיל את כל האובייקטים\n      const allItems = [...table];\n  \n      // ערבב את האובייקטים במערך\n      allItems.sort(() => Math.random() - 0.5);\n  \n      // צור מערך ריק שיכיל את האובייקטים שניצחו\n      let winners = [];\n  \n      // בצע לולאה על כל האובייקטים במערך\n      for (let i = 0; i < 10; i++) {\n        // בדוק אם האובייקט כבר ניצח\n        const alreadyWon = winners.some((winner) => winner.teamId === allItems[i].teamId);\n  \n        // אם לא, הוסף אותו למערך המנצחים\n        if (!alreadyWon) {\n         \n          winners.push(allItems[i]);\n        }\n      }\n  \n      // לאחר שהלולאה מסתיימת, עדכן את מספר הנקודות של כל אובייקט במערך המנצחים ל-3\n      for (const winner of winners) {\n        winner.points += 3;\n        winner.games += 1;\n        console.log(winner.name)\n      }\n      // החזיר את המערך המנצחים\n      setWinners(winners);\n      console.log(winners)\n    };\n\n    // const handleClick = () => {\n    //     // מצא שני אובייקטים אקראיים\n    //     const [a, b] = table.sort(() => Math.random() - 0.5).slice(0, 2);\n\n    //     // חשב מי מנצח\n    //     if (a.points > b.points) {\n    //         b.games +=1\n    //         b.loses +=1\n    //         a.games += 1\n    //         a.points += 3\n    //         a.wins +=1;\n    //         console.log(a)\n    //         console.log(b)\n    //         setWinner(a)\n    //         setLooser(b)\n    //     } else {\n    //         a.games +=1;\n    //         a.loses +=1;\n    //         b.games +=1;\n    //         b.points +=3\n    //         b.wins +=1;\n    //         console.log(b)\n    //         console.log(a)\n    //         setWinner(b);\n    //         setLooser(a)\n    //     }\n    // };\n\n    return (\n        <div className=\"TableList\">\n            <button onClick={handleClick}>התחל</button>\n            {winners && (\n                <p>המנצחים הם: {winners.map((winner) => winner.name)}</p>\n            )}\n\n            {/* {winner   &&   (\n                <p> {winner.name}: המנצחת היא      <br />\n                 {looser.name}: המפסידה היא </p>\n            )} */}\n            {/* {winner && (\n        <p>המנצחים הם: {winner.map((winner) => winner.name)}</p>\n      )} */}\n            <Table striped bordered hover >\n                <thead>\n                    <tr>\n                        <th>Place</th>\n                        <th>Name</th>\n                        <th>Games</th>\n                        <th>Wins</th>\n                        <th>Loses</th>\n                        <th>Draw</th>\n                        <th>Points</th>\n                        <th>Image</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {table.sort((a, b) => b.points - a.points).map((t, index) =>\n                        <tr key={t.teamId}>\n                            <td>{index + 1}</td>\n                            <td>{t.name}</td>\n                            <td>{t.games}</td>\n                            <td>{t.wins}</td>\n                            <td>{t.loses}</td>\n                            <td>{t.draw}</td>\n                            <td>{t.points}</td>\n                            <td>\n                                <img className=\"img\" src={appConfig.playersImagesUrl + t.imageName} style={{ width: '20px' }} />\n                            </td>\n                        </tr>\n                    )}\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n\nexport default TableList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}