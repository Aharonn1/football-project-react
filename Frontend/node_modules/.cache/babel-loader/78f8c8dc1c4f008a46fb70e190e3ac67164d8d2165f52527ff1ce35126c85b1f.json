{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\javascript\\\\manchester project\\\\Frontend\\\\src\\\\Components\\\\DataArea\\\\Insert\\\\Insert.tsx\",\n  _s = $RefreshSig$();\nimport dataService from \"../../../Services/DataService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useEffect, useState } from \"react\";\nimport notify from \"../../../Utils/Notify\";\nimport \"./Insert.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Insert() {\n  _s();\n  const [kindTask, setKindTask] = useState([]);\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const navigate = useNavigate();\n  useEffect(() => {\n    dataService.getAllTasksByKindTask().then(dbKindTask => setKindTask(dbKindTask)).catch(err => notify.error(err.message));\n  }, []);\n  async function send(player) {\n    player.image = player.image[0];\n    await dataService.addTask(player);\n    notify.success(\"Task has been added\");\n    navigate(\"/list\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Insert\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(send),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Kind Task: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        defaultValue: \"\",\n        ...register(\"countryId\"),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"\",\n          children: \"Select Kind Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), kindTask.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: t.countryId,\n          children: t.countryName\n        }, t.countryId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 40\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"First Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register(\"firstName\"),\n        required: true,\n        minLength: 2,\n        maxLength: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Last Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register(\"lastName\"),\n        required: true,\n        minLength: 2,\n        maxLength: 200\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Number Shirt: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        ...register(\"numberShirt\"),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Role: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"string\",\n        ...register(\"role\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ...register(\"image\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(Insert, \"qcwn5ZDQprmSOxq+FHLrBPLikqw=\", false, function () {\n  return [useForm, useNavigate];\n});\n_c = Insert;\nexport default Insert;\nvar _c;\n$RefreshReg$(_c, \"Insert\");","map":{"version":3,"names":["dataService","useNavigate","useForm","useEffect","useState","notify","Insert","kindTask","setKindTask","register","handleSubmit","navigate","getAllTasksByKindTask","then","dbKindTask","catch","err","error","message","send","player","image","addTask","success","map","t","countryId","countryName"],"sources":["C:/Users/User/Desktop/javascript/manchester project/Frontend/src/Components/DataArea/Insert/Insert.tsx"],"sourcesContent":["import CountryModel from \"../../../Models/CountryModel\";\nimport dataService from \"../../../Services/DataService\";\nimport TeamModel from \"../../../Models/TeamModel\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useEffect, useState } from \"react\";\nimport notify from \"../../../Utils/Notify\";\nimport \"./Insert.css\";\n\nfunction Insert(): JSX.Element {\n\n    const [kindTask, setKindTask] = useState<CountryModel[]>([]);\n    const { register, handleSubmit } = useForm<TeamModel>();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        dataService.getAllTasksByKindTask()\n            .then(dbKindTask => setKindTask(dbKindTask))\n            .catch(err => notify.error(err.message));\n    }, []);\n\n    async function send(player: TeamModel) {\n        player.image = (player.image as unknown as FileList)[0]\n        await dataService.addTask(player);\n        notify.success(\"Task has been added\");\n        navigate(\"/list\");\n    }\n\n    return (\n        <div className=\"Insert\">\n            <h2>Add Task</h2>\n            <form onSubmit={handleSubmit(send)}>\n                <label>Kind Task: </label>\n                <select defaultValue=\"\" {...register(\"countryId\")} required>\n                    <option disabled value=\"\">Select Kind Task</option>\n                    {kindTask.map(t => <option key={t.countryId} value={t.countryId}>{t.countryName}</option>)}\n                </select>\n\n                <label>First Name: </label>\n                <input type=\"text\" {...register(\"firstName\")} required minLength={2} maxLength={50} />\n\n                <label>Last Name: </label>\n                <input type=\"text\" {...register(\"lastName\")} required minLength={2} maxLength={200} />\n\n                <label>Number Shirt: </label>\n                <input type=\"number\" {...register(\"numberShirt\")} required />\n\n                <label>Role: </label>\n                <input type=\"string\" {...register(\"role\")} />\n\n                <label>image</label>\n                <input type=\"file\" {...register(\"image\")} />\n\n                <button>Add</button>\n            </form>\n        </div>\n    );\n}\nexport default Insert;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}