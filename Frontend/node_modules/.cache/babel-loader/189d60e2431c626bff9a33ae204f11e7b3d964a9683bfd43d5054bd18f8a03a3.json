{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\javascript\\\\manchester project\\\\Frontend\\\\src\\\\Components\\\\DataArea\\\\Statistics\\\\Statistics.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./Statistics.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Statistics() {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const handleClick = () => {\n    // צור מערך חדש שיכיל את כל האובייקטים\n    const allItems = [...players];\n\n    // ערבב את האובייקטים במערך\n    allItems.sort(() => Math.random() - 0.5);\n\n    // צור מערך ריק שיכיל את האובייקטים שניצחו\n    let scores = [];\n\n    // בצע לולאה על כל האובייקטים במערך\n    for (let i = 0; i < allItems.length; i++) {\n      // בדוק אם האובייקט כבר ניצח\n      const alreadyWon = scores.some(winner => winner.teamId === allItems[i].teamId);\n\n      // אם לא, הוסף אותו למערך המנצחים\n      if (!alreadyWon) {\n        if (i < 10) {\n          winners.push(allItems[i]);\n        } else {\n          losers.push(allItems[i]);\n        }\n      }\n    }\n    function getGoalChance(team) {\n      // מחזיר את הסיכוי לכיבוש שער בהתאם למיקום השחקן\n      if (team.numberShirt === 5) {\n        return 0.5;\n      } else {\n        return 0.25;\n      }\n    }\n  };\n  // function onClick() {\n  //     // מקבל את השחקן הנוכחי\n  //     const currentObject = players[Math.floor(Math.random() * players.length)];\n\n  //     // מחשב את מספר השערים שכבשו\n  //     const numberOfGoals = Math.floor(Math.random() * getGoalChance(currentObject));\n  //     console.log(numberOfGoals)\n  //     // מעדכן את מספר השערים\n  //     currentObject.goals += numberOfGoals;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Statistics\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"\\u05DE\\u05D7\\u05E9\\u05D1 \\u05DE\\u05E1\\u05E4\\u05E8 \\u05E9\\u05E2\\u05E8\\u05D9\\u05DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 13\n  }, this);\n}\n_s(Statistics, \"hyY7/HJXoJofxtfXykH8Mk/DETg=\");\n_c = Statistics;\nexport default Statistics;\nvar _c;\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"names":["useState","Statistics","players","setPlayers","handleClick","allItems","sort","Math","random","scores","i","length","alreadyWon","some","winner","teamId","winners","push","losers","getGoalChance","team","numberShirt"],"sources":["C:/Users/User/Desktop/javascript/manchester project/Frontend/src/Components/DataArea/Statistics/Statistics.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./Statistics.css\";\nimport TeamModel from \"../../../Models/TeamModel\";\n\nfunction Statistics(): JSX.Element {\n\n    const [players, setPlayers] = useState<TeamModel[]>([]);\n\n    const handleClick = () => {\n        // צור מערך חדש שיכיל את כל האובייקטים\n        const allItems = [...players];\n\n        // ערבב את האובייקטים במערך\n        allItems.sort(() => Math.random() - 0.5);\n\n        // צור מערך ריק שיכיל את האובייקטים שניצחו\n        let scores = [];\n\n\n        // בצע לולאה על כל האובייקטים במערך\n        for (let i = 0; i < allItems.length; i++) {\n            // בדוק אם האובייקט כבר ניצח\n            const alreadyWon = scores.some((winner) => winner.teamId === allItems[i].teamId);\n\n            // אם לא, הוסף אותו למערך המנצחים\n            if (!alreadyWon) {\n                if (i < 10) {\n                    winners.push(allItems[i]);\n                } else {\n                    losers.push(allItems[i]);\n                }\n            }\n        }\n\n        function getGoalChance(team: TeamModel) {\n            // מחזיר את הסיכוי לכיבוש שער בהתאם למיקום השחקן\n            if (team.numberShirt === 5) {\n                return 0.5;\n            } else {\n                return 0.25;\n            }\n        }\n    }\n        // function onClick() {\n        //     // מקבל את השחקן הנוכחי\n        //     const currentObject = players[Math.floor(Math.random() * players.length)];\n\n        //     // מחשב את מספר השערים שכבשו\n        //     const numberOfGoals = Math.floor(Math.random() * getGoalChance(currentObject));\n        //     console.log(numberOfGoals)\n        //     // מעדכן את מספר השערים\n        //     currentObject.goals += numberOfGoals;\n        // }\n\n        return (\n            <div className=\"Statistics\">\n                <h1>statistics\n                </h1>\n                <button onClick={handleClick}>מחשב מספר שערים</button>\n\n            </div>\n        );\n    }\n\nexport default Statistics;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,kBAAkB;AAAC;AAG1B,SAASC,UAAU,GAAgB;EAAA;EAE/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGH,QAAQ,CAAc,EAAE,CAAC;EAEvD,MAAMI,WAAW,GAAG,MAAM;IACtB;IACA,MAAMC,QAAQ,GAAG,CAAC,GAAGH,OAAO,CAAC;;IAE7B;IACAG,QAAQ,CAACC,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAC;;IAExC;IACA,IAAIC,MAAM,GAAG,EAAE;;IAGf;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,QAAQ,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;MACtC;MACA,MAAME,UAAU,GAAGH,MAAM,CAACI,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACC,MAAM,KAAKV,QAAQ,CAACK,CAAC,CAAC,CAACK,MAAM,CAAC;;MAEhF;MACA,IAAI,CAACH,UAAU,EAAE;QACb,IAAIF,CAAC,GAAG,EAAE,EAAE;UACRM,OAAO,CAACC,IAAI,CAACZ,QAAQ,CAACK,CAAC,CAAC,CAAC;QAC7B,CAAC,MAAM;UACHQ,MAAM,CAACD,IAAI,CAACZ,QAAQ,CAACK,CAAC,CAAC,CAAC;QAC5B;MACJ;IACJ;IAEA,SAASS,aAAa,CAACC,IAAe,EAAE;MACpC;MACA,IAAIA,IAAI,CAACC,WAAW,KAAK,CAAC,EAAE;QACxB,OAAO,GAAG;MACd,CAAC,MAAM;QACH,OAAO,IAAI;MACf;IACJ;EACJ,CAAC;EACG;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACI;IAAK,SAAS,EAAC,YAAY;IAAA,wBACvB;MAAA,UAAI;IACJ;MAAA;MAAA;MAAA;IAAA,QAAK,eACL;MAAQ,OAAO,EAAEjB,WAAY;MAAA,UAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAEpD;AAEd;AAAC,GA1DIH,UAAU;AAAA,KAAVA,UAAU;AA4DnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}