{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\javascript\\\\Project React Tasks2\\\\Frontend\\\\src\\\\Components\\\\DataArea\\\\DataCard\\\\DataCard.tsx\";\nimport dataService from \"../../../Services/DataService\";\nimport \"./DataCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataCard(props) {\n  async function deleteMe() {\n    if (!window.confirm(\"Are you sure?\")) return;\n    await props.deleteMe(props.task.taskId);\n    alert(\"Task has been deleted\");\n  }\n  async function updateMe(task) {\n    props.task.isFinish = props.task.isFinish ? 0 : 1;\n    await dataService.updateTask(props.task);\n  }\n  async function updateArchived(task) {\n    props.task.isArchived = props.task.isArchived ? 0 : 1;\n    await dataService.updateTaskArchived(props.task);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DataCard Box\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"  task: \", props.task.name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"  kind task: \", props.task.kindTaskId, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"  description: \", props.task.description, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"  start date: \", props.task.startDate.split(\"-\").join, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" end date: \", props.task.endDate.slice(0, 10).split(\"-\").reverse().join(\"/\"), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: props.task.isFinish === 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), \" The task is finished :\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => updateMe(props.task),\n      children: \"Finish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => updateArchived(props.task),\n      children: \"Archived\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteMe,\n      children: \"\\u274C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_c = DataCard;\nexport default DataCard;\nvar _c;\n$RefreshReg$(_c, \"DataCard\");","map":{"version":3,"names":["dataService","DataCard","props","deleteMe","window","confirm","task","taskId","alert","updateMe","isFinish","updateTask","updateArchived","isArchived","updateTaskArchived","name","kindTaskId","description","startDate","split","join","endDate","slice","reverse"],"sources":["C:/Users/User/Desktop/javascript/Project React Tasks2/Frontend/src/Components/DataArea/DataCard/DataCard.tsx"],"sourcesContent":["import TaskModel from \"../../../Models/TaskModel\";\nimport dataService from \"../../../Services/DataService\";\nimport \"./DataCard.css\";\n\ninterface TaskCardProps {\n    task: TaskModel,\n    deleteMe: (taskId: number) => Promise<void>\n}\n\nfunction DataCard(props: TaskCardProps): JSX.Element {\n\n    async function deleteMe() {\n        if (!window.confirm(\"Are you sure?\")) return;\n        await props.deleteMe(props.task.taskId);\n        alert(\"Task has been deleted\");\n    }\n\n    async function updateMe(task: TaskModel) {\n        props.task.isFinish = props.task.isFinish ? 0 : 1;\n        await dataService.updateTask(props.task)\n    }\n\n    async function updateArchived(task: TaskModel) {\n        props.task.isArchived = props.task.isArchived ? 0 : 1;\n        await dataService.updateTaskArchived(props.task)\n    }\n\n    return (\n        <div className=\"DataCard Box\">\n            <span>  task: {props.task.name} </span>\n            <br />\n            <span>  kind task: {props.task.kindTaskId} </span>\n            <br />\n            <span>  description: {props.task.description} </span>\n            <br />\n            <span>  start date: {props.task.startDate.split(\"-\").join} </span>\n            <br />\n            <span> end date: {props.task.endDate.slice(0, 10).split(\"-\").reverse().join(\"/\")} </span>\n            <br />\n            <input type=\"checkbox\" checked={props.task.isFinish === 1} /> The task is finished\n            :<button onClick={() => updateMe(props.task)}>Finish</button>\n            <br />\n             <button onClick={() => updateArchived(props.task)}>Archived</button>\n            <br />\n            <button onClick={deleteMe}>‚ùå</button>\n        </div >\n    );\n}\nexport default DataCard;\n"],"mappings":";AACA,OAAOA,WAAW,MAAM,+BAA+B;AACvD,OAAO,gBAAgB;AAAC;AAOxB,SAASC,QAAQ,CAACC,KAAoB,EAAe;EAEjD,eAAeC,QAAQ,GAAG;IACtB,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,eAAe,CAAC,EAAE;IACtC,MAAMH,KAAK,CAACC,QAAQ,CAACD,KAAK,CAACI,IAAI,CAACC,MAAM,CAAC;IACvCC,KAAK,CAAC,uBAAuB,CAAC;EAClC;EAEA,eAAeC,QAAQ,CAACH,IAAe,EAAE;IACrCJ,KAAK,CAACI,IAAI,CAACI,QAAQ,GAAGR,KAAK,CAACI,IAAI,CAACI,QAAQ,GAAG,CAAC,GAAG,CAAC;IACjD,MAAMV,WAAW,CAACW,UAAU,CAACT,KAAK,CAACI,IAAI,CAAC;EAC5C;EAEA,eAAeM,cAAc,CAACN,IAAe,EAAE;IAC3CJ,KAAK,CAACI,IAAI,CAACO,UAAU,GAAGX,KAAK,CAACI,IAAI,CAACO,UAAU,GAAG,CAAC,GAAG,CAAC;IACrD,MAAMb,WAAW,CAACc,kBAAkB,CAACZ,KAAK,CAACI,IAAI,CAAC;EACpD;EAEA,oBACI;IAAK,SAAS,EAAC,cAAc;IAAA,wBACzB;MAAA,WAAM,UAAQ,EAACJ,KAAK,CAACI,IAAI,CAACS,IAAI,EAAC,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO,eACvC;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,WAAM,eAAa,EAACb,KAAK,CAACI,IAAI,CAACU,UAAU,EAAC,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO,eAClD;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,WAAM,iBAAe,EAACd,KAAK,CAACI,IAAI,CAACW,WAAW,EAAC,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO,eACrD;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,WAAM,gBAAc,EAACf,KAAK,CAACI,IAAI,CAACY,SAAS,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,EAAC,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO,eAClE;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,WAAM,aAAW,EAAClB,KAAK,CAACI,IAAI,CAACe,OAAO,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACH,KAAK,CAAC,GAAG,CAAC,CAACI,OAAO,EAAE,CAACH,IAAI,CAAC,GAAG,CAAC,EAAC,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO,eACzF;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAO,IAAI,EAAC,UAAU;MAAC,OAAO,EAAElB,KAAK,CAACI,IAAI,CAACI,QAAQ,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,2BAC5D;MAAQ,OAAO,EAAE,MAAMD,QAAQ,CAACP,KAAK,CAACI,IAAI,CAAE;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS,eAC7D;MAAA;MAAA;MAAA;IAAA,QAAM,eACL;MAAQ,OAAO,EAAE,MAAMM,cAAc,CAACV,KAAK,CAACI,IAAI,CAAE;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS,eACrE;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAQ,OAAO,EAAEH,QAAS;MAAA,UAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAClC;AAEf;AAAC,KAtCQF,QAAQ;AAuCjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}