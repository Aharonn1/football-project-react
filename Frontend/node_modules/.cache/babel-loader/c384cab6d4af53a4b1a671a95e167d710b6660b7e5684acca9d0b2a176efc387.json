{"ast":null,"code":"import { PlayersActionType, playersStore } from \"../Redux/taskState\";\nimport appConfig from \"../Utils/AppConfig\";\nimport axios from \"axios\";\nclass DataService {\n  async getAllPlayers() {\n    try {\n      let players = playersStore.getState().players;\n      if (players.length === 0) {\n        const response = await axios.get(appConfig.playersUrl);\n        players = response.data;\n        playersStore.dispatch({\n          type: PlayersActionType.FetchPlayers,\n          payload: players\n        });\n      }\n      return players;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async getTopGoalScorers() {\n    try {\n      let players = playersStore.getState().topPlayers;\n      if (players.length === 0) {\n        const response = await axios.get(appConfig.topPlayerGoalsUrl);\n        players = response.data;\n        playersStore.dispatch({\n          type: PlayersActionType.FetchTopPlayers,\n          payload: players\n        });\n      }\n      return players;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async getTopAssists() {\n    try {\n      let players = playersStore.getState().topPlayers;\n      if (players.length === 0) {\n        const response = await axios.get(appConfig.topPlayerAssistsUrl);\n        players = response.data;\n        playersStore.dispatch({\n          type: PlayersActionType.FetchTopAssists,\n          payload: players\n        });\n      }\n      return players;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async getTheTable() {\n    try {\n      let table = playersStore.getState().table;\n      if (table.length === 0) {\n        const response = await axios.get(appConfig.tableUrl);\n        table = response.data;\n        playersStore.dispatch({\n          type: PlayersActionType.FetchTable,\n          payload: table\n        });\n      }\n      return table;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async getTheWinsTeam() {\n    try {\n      let table = playersStore.getState().topTeams;\n      if (table.length === 0) {\n        const response = await axios.get(appConfig.tableTeamWinsUrl);\n        table = response.data;\n        playersStore.dispatch({\n          type: PlayersActionType.FetchTeamWinsTable,\n          payload: table\n        });\n      }\n      return table;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async deletePlayer(taskId) {\n    try {\n      await axios.delete(appConfig.playersUrl + taskId);\n      playersStore.dispatch({\n        type: PlayersActionType.DeletePlayer,\n        payload: taskId\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  getTheResult() {\n    let table = playersStore.getState().table;\n    let players = playersStore.getState().topPlayers;\n    const allItems = [...table];\n    allItems.sort(() => Math.random() - 0.5);\n    let winners = [];\n    let losers = [];\n    for (let i = 0; i < allItems.length; i++) {\n      const alreadyWon = winners.some(winner => winner.teamId === allItems[i].teamId);\n      const alreadyLost = losers.some(loser => loser.teamId === allItems[i].teamId);\n      if (!alreadyWon && !alreadyLost) {\n        if (i < 10 && allItems[i].games <= 37) {\n          allItems[i].awayTeam = 5;\n          allItems[i].homeTeam = 0;\n          allItems[i].goals = 3;\n          const randomNumber = Math.floor(Math.random() * 3);\n          allItems[i].goals += randomNumber;\n          allItems[i].awayTeam = winners.push(allItems[i]);\n          console.log(allItems[0].name + allItems[1].name + allItems[2].name + allItems[3].name + allItems[4].name);\n        } else if (allItems[i].games <= 37) {\n          allItems[i].awayTeam = 0;\n          allItems[i].homeTeam = 5;\n          allItems[i].goals = 3;\n          const randomNumber = Math.floor(Math.random() * 3) + 1;\n          allItems[i].goals -= randomNumber;\n          allItems[i].homeTeam = losers.push(allItems[i]);\n        }\n      }\n    }\n    for (const winner of winners) {\n      if (winner.games <= 37) {\n        winner.points += 3;\n        winner.wins += 1;\n      }\n    }\n    for (const loser of losers) {\n      if (loser.games <= 37) {\n        loser.loses += 1;\n      }\n    }\n    for (const game of table) {\n      if (game.games <= 37) {\n        game.games += 1;\n      }\n    }\n    const scoredPlayer1 = players[Math.floor(Math.random() * players.length)];\n    const scoredPlayer2 = players[Math.floor(Math.random() * players.length)];\n    const assistPlayer1 = players[Math.floor(Math.random() * players.length)];\n    const assistPlayer2 = players[Math.floor(Math.random() * players.length)];\n    let actionExecuted = false;\n    for (let i = 18; i < allItems.length; i++) {\n      if (allItems[i].games <= 37 && !actionExecuted) {\n        scoredPlayer1.goals += 1;\n        scoredPlayer2.goals += 1;\n        assistPlayer1.assists += 1;\n        assistPlayer2.assists += 1;\n        actionExecuted = true;\n      }\n    }\n  }\n}\nconst dataService = new DataService();\nexport default dataService;","map":{"version":3,"names":["PlayersActionType","playersStore","appConfig","axios","DataService","getAllPlayers","players","getState","length","response","get","playersUrl","data","dispatch","type","FetchPlayers","payload","err","console","log","getTopGoalScorers","topPlayers","topPlayerGoalsUrl","FetchTopPlayers","getTopAssists","topPlayerAssistsUrl","FetchTopAssists","getTheTable","table","tableUrl","FetchTable","getTheWinsTeam","topTeams","tableTeamWinsUrl","FetchTeamWinsTable","deletePlayer","taskId","delete","DeletePlayer","getTheResult","allItems","sort","Math","random","winners","losers","i","alreadyWon","some","winner","teamId","alreadyLost","loser","games","awayTeam","homeTeam","goals","randomNumber","floor","push","name","points","wins","loses","game","scoredPlayer1","scoredPlayer2","assistPlayer1","assistPlayer2","actionExecuted","assists","dataService"],"sources":["C:/Users/User/Desktop/javascript/manchester project/Frontend/src/Services/DataService.ts"],"sourcesContent":["import { PlayersActionType, playersStore } from \"../Redux/taskState\";\r\nimport TableModel from \"../Models/TableModel\";\r\nimport TeamModel from \"../Models/TeamModel\";\r\nimport appConfig from \"../Utils/AppConfig\";\r\nimport axios from \"axios\";\r\nimport { SetStateAction, useState } from \"react\";\r\n\r\nclass DataService {\r\n\r\n    async getAllPlayers(): Promise<TeamModel[]> {\r\n        try {\r\n            let players = playersStore.getState().players;\r\n            if (players.length === 0) {\r\n                const response = await axios.get<TeamModel[]>(appConfig.playersUrl);\r\n                players = response.data;\r\n                playersStore.dispatch({ type: PlayersActionType.FetchPlayers, payload: players })\r\n            }\r\n            return players;\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    async getTopGoalScorers(): Promise<TeamModel[]> {\r\n        try {\r\n            let players = playersStore.getState().topPlayers;\r\n            if (players.length === 0) {\r\n                const response = await axios.get<TeamModel[]>(appConfig.topPlayerGoalsUrl);\r\n                players = response.data;\r\n                playersStore.dispatch({ type: PlayersActionType.FetchTopPlayers, payload: players })\r\n            }\r\n            return players;\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    async getTopAssists(): Promise<TeamModel[]> {\r\n        try {\r\n            let players = playersStore.getState().topPlayers;\r\n            if (players.length === 0) {\r\n                const response = await axios.get<TeamModel[]>(appConfig.topPlayerAssistsUrl);\r\n                players = response.data;\r\n                playersStore.dispatch({ type: PlayersActionType.FetchTopAssists, payload: players })\r\n            }\r\n            return players;\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    async getTheTable(): Promise<TableModel[]> {\r\n        try {\r\n            let table = playersStore.getState().table;\r\n            if (table.length === 0) {\r\n                const response = await axios.get<TableModel[]>(appConfig.tableUrl);\r\n                table = response.data;\r\n                playersStore.dispatch({ type: PlayersActionType.FetchTable, payload: table })\r\n            }\r\n            return table;\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    async getTheWinsTeam(): Promise<TableModel[]> {\r\n        try {\r\n            let table = playersStore.getState().topTeams;\r\n            if (table.length === 0) {\r\n                const response = await axios.get<TableModel[]>(appConfig.tableTeamWinsUrl);\r\n                table = response.data;\r\n                playersStore.dispatch({ type: PlayersActionType.FetchTeamWinsTable, payload: table })\r\n            }\r\n            return table;\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    async deletePlayer(taskId: number): Promise<void> {\r\n        try {\r\n            await axios.delete(appConfig.playersUrl + taskId);\r\n            playersStore.dispatch({ type: PlayersActionType.DeletePlayer, payload: taskId })\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    getTheResult() {\r\n        let table = playersStore.getState().table;\r\n        let players = playersStore.getState().topPlayers;\r\n        const allItems = [...table];\r\n\r\n\r\n        allItems.sort(() => Math.random() - 0.5);\r\n\r\n        let winners: SetStateAction<any[]> = [];\r\n        let losers: SetStateAction<any[]> = [];\r\n        for (let i = 0; i < allItems.length; i++) {\r\n            const alreadyWon = winners.some((winner) => winner.teamId === allItems[i].teamId);\r\n            const alreadyLost = losers.some((loser) => loser.teamId === allItems[i].teamId);\r\n\r\n            if (!alreadyWon && !alreadyLost) {\r\n                if (i < 10 && allItems[i].games <= 37) {\r\n                    allItems[i].awayTeam = 5;\r\n                    allItems[i].homeTeam = 0;\r\n                    allItems[i].goals = 3;\r\n                    const randomNumber = Math.floor(Math.random() * 3);\r\n                    allItems[i].goals += randomNumber;\r\n                    allItems[i].awayTeam = winners.push(allItems[i])\r\n                    console.log(allItems[0].name + allItems[1].name + allItems[2].name + allItems[3].name + allItems[4].name)\r\n                } else if (allItems[i].games <= 37) {\r\n                    allItems[i].awayTeam = 0;\r\n                    allItems[i].homeTeam = 5;\r\n                    allItems[i].goals = 3;\r\n                    const randomNumber = Math.floor(Math.random() * 3) + 1;\r\n                    allItems[i].goals -= randomNumber\r\n                    allItems[i].homeTeam = losers.push(allItems[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const winner of winners) {\r\n            if (winner.games <= 37) {\r\n                winner.points += 3;\r\n                winner.wins += 1;\r\n            }\r\n        }\r\n\r\n        for (const loser of losers) {\r\n            if (loser.games <= 37) {\r\n                loser.loses += 1;\r\n            }\r\n        }\r\n\r\n        for (const game of table) {\r\n            if (game.games <= 37) {\r\n                game.games += 1;\r\n            }\r\n        }\r\n\r\n        const scoredPlayer1 = players[Math.floor(Math.random() * players.length)];\r\n        const scoredPlayer2 = players[Math.floor(Math.random() * players.length)];\r\n        const assistPlayer1 = players[Math.floor(Math.random() * players.length)];\r\n        const assistPlayer2 = players[Math.floor(Math.random() * players.length)];\r\n\r\n        let actionExecuted = false;\r\n\r\n        for (let i = 18; i < allItems.length; i++) {\r\n            if (allItems[i].games <= 37 && !actionExecuted) {\r\n                scoredPlayer1.goals += 1;\r\n                scoredPlayer2.goals += 1;\r\n                assistPlayer1.assists += 1;\r\n                assistPlayer2.assists += 1;\r\n                actionExecuted = true;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst dataService = new DataService();\r\nexport default dataService;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}