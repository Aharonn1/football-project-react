{"ast":null,"code":"import { PlayersActionType, playersStore } from \"../Redux/taskState\";\nimport appConfig from \"../Utils/AppConfig\";\nimport axios from \"axios\";\nclass DataService {\n  async getAllPlayers() {\n    try {\n      let players = playersStore.getState().players;\n      if (players.length === 0) {\n        const response = await axios.get(appConfig.playersUrl);\n        players = response.data;\n        playersStore.dispatch({\n          type: PlayersActionType.FetchPlayers,\n          payload: players\n        });\n      }\n      return players;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async getTopGoalScorers() {\n    try {\n      let players = playersStore.getState().topPlayers;\n      if (players.length === 0) {\n        const response = await axios.get(appConfig.topPlayerGoalsUrl);\n        players = response.data;\n        playersStore.dispatch({\n          type: PlayersActionType.FetchTopPlayers,\n          payload: players\n        });\n      }\n      return players;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async getTopAssists() {\n    try {\n      let players = playersStore.getState().topPlayers;\n      if (players.length === 0) {\n        const response = await axios.get(appConfig.topPlayerAssistsUrl);\n        players = response.data;\n        playersStore.dispatch({\n          type: PlayersActionType.FetchTopAssists,\n          payload: players\n        });\n      }\n      return players;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async getTheTable() {\n    try {\n      let table = playersStore.getState().table;\n      if (table.length === 0) {\n        const response = await axios.get(appConfig.tableUrl);\n        table = response.data;\n        playersStore.dispatch({\n          type: PlayersActionType.FetchTable,\n          payload: table\n        });\n      }\n      return table;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async deletePlayer(taskId) {\n    try {\n      await axios.delete(appConfig.playersUrl + taskId);\n      playersStore.dispatch({\n        type: PlayersActionType.DeletePlayer,\n        payload: taskId\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  gewWinners() {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    let winners = [];\n    for (const winner of winners) {\n      if (winner.games <= 37) {\n        winner.points += 3;\n        winner.wins += 1;\n        console.log(winner);\n      }\n    }\n  }\n}\nconst dataService = new DataService();\nexport default dataService;","map":{"version":3,"names":["PlayersActionType","playersStore","appConfig","axios","DataService","getAllPlayers","players","getState","length","response","get","playersUrl","data","dispatch","type","FetchPlayers","payload","err","console","log","getTopGoalScorers","topPlayers","topPlayerGoalsUrl","FetchTopPlayers","getTopAssists","topPlayerAssistsUrl","FetchTopAssists","getTheTable","table","tableUrl","FetchTable","deletePlayer","taskId","delete","DeletePlayer","gewWinners","winners","winner","games","points","wins","dataService"],"sources":["C:/Users/User/Desktop/javascript/manchester project/Frontend/src/Services/DataService.ts"],"sourcesContent":["import { PlayersActionType, playersStore } from \"../Redux/taskState\";\r\nimport TableModel from \"../Models/TableModel\";\r\nimport TeamModel from \"../Models/TeamModel\";\r\nimport appConfig from \"../Utils/AppConfig\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nclass DataService {\r\n\r\n    async getAllPlayers(): Promise<TeamModel[]> {\r\n        try {\r\n            let players = playersStore.getState().players;\r\n            if (players.length === 0) {\r\n                const response = await axios.get<TeamModel[]>(appConfig.playersUrl);\r\n                players = response.data;\r\n                playersStore.dispatch({ type: PlayersActionType.FetchPlayers, payload: players })\r\n            }\r\n            return players;\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    async getTopGoalScorers(): Promise<TeamModel[]> {\r\n        try {\r\n            let players = playersStore.getState().topPlayers;\r\n            if (players.length === 0) {\r\n                const response = await axios.get<TeamModel[]>(appConfig.topPlayerGoalsUrl);\r\n                players = response.data;\r\n                playersStore.dispatch({ type: PlayersActionType.FetchTopPlayers, payload: players })\r\n            }\r\n            return players;\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    async getTopAssists(): Promise<TeamModel[]> {\r\n        try {\r\n            let players = playersStore.getState().topPlayers;\r\n            if (players.length === 0) {\r\n                const response = await axios.get<TeamModel[]>(appConfig.topPlayerAssistsUrl);\r\n                players = response.data;\r\n                playersStore.dispatch({ type: PlayersActionType.FetchTopAssists, payload: players })\r\n            }\r\n            return players;\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    async getTheTable(): Promise<TableModel[]> {    \r\n        try {\r\n            let table = playersStore.getState().table;\r\n            if (table.length === 0) {\r\n                const response = await axios.get<TableModel[]>(appConfig.tableUrl);\r\n                table = response.data;\r\n                playersStore.dispatch({ type: PlayersActionType.FetchTable, payload: table })              \r\n            }\r\n            return table;\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    async deletePlayer(taskId: number): Promise<void> {\r\n        try {\r\n            await axios.delete(appConfig.playersUrl + taskId);\r\n            playersStore.dispatch({ type: PlayersActionType.DeletePlayer, payload: taskId })\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n     gewWinners(){\r\n        // eslint-disable-next-line react-hooks/rules-of-hooks\r\n        let winners = [];\r\n        for (const winner of winners) {\r\n            if (winner.games <= 37) {\r\n                winner.points += 3;\r\n                winner.wins += 1;\r\n                console.log(winner)\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\nconst dataService = new DataService();\r\nexport default dataService;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}