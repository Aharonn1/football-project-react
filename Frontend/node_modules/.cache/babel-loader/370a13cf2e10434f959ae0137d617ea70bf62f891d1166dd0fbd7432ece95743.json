{"ast":null,"code":"import axios from \"axios\";\nimport appConfig from \"../Utils/AppConfig\";\nimport { PlayersActionType, playersStore } from \"../Redux/taskState\";\nclass DataService {\n  async getAllPlayers() {\n    try {\n      let players = playersStore.getState().players;\n      if (players.length === 0) {\n        const response = await axios.get(appConfig.playersUrl);\n        players = response.data;\n        playersStore.dispatch({\n          type: PlayersActionType.FetchPlayers,\n          payload: players\n        });\n      }\n      return players;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async getTopGoalScorers() {\n    try {\n      let players = playersStore.getState().topPlayers;\n      if (players.length === 0) {\n        const response = await axios.get(appConfig.topPlayerGoalsUrl);\n        players = response.data;\n        playersStore.dispatch({\n          type: PlayersActionType.FetchTopPlayers,\n          payload: players\n        });\n      }\n      return players;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async getTopAssists() {\n    try {\n      let players = playersStore.getState().topPlayers;\n      if (players.length === 0) {\n        const response = await axios.get(appConfig.topPlayerAssistsUrl);\n        players = response.data;\n        playersStore.dispatch({\n          type: PlayersActionType.FetchTopAssists,\n          payload: players\n        });\n      }\n      return players;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async getTheTable() {\n    try {\n      let table = playersStore.getState().table;\n      if (table.length === 0) {\n        const response = await axios.get(appConfig.tableUrl);\n        table = response.data;\n        playersStore.dispatch({\n          type: PlayersActionType.FetchTable,\n          payload: table\n        });\n      }\n      return table;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async getAllTasksByKindTask() {\n    try {\n      let kindCountry = playersStore.getState().kindCountry;\n      const response = await axios.get(appConfig.countriesUrl);\n      kindCountry = response.data;\n      return kindCountry;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async getPlayerByKindTask(kindTaskId) {\n    let kindTask = playersStore.getState().players;\n    let task = kindTask.find(t => t.playerId === kindTaskId);\n    if (!task) {\n      const response = await axios.get(appConfig.taskByTaskUrl + kindTaskId);\n      kindTask = response.data;\n    }\n    return kindTask;\n  }\n  async deletePlayer(taskId) {\n    try {\n      await axios.delete(appConfig.playersUrl + taskId);\n      playersStore.dispatch({\n        type: PlayersActionType.DeletePlayer,\n        payload: taskId\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\nconst dataService = new DataService();\nexport default dataService;","map":{"version":3,"names":["axios","appConfig","PlayersActionType","playersStore","DataService","getAllPlayers","players","getState","length","response","get","playersUrl","data","dispatch","type","FetchPlayers","payload","err","console","log","getTopGoalScorers","topPlayers","topPlayerGoalsUrl","FetchTopPlayers","getTopAssists","topPlayerAssistsUrl","FetchTopAssists","getTheTable","table","tableUrl","FetchTable","getAllTasksByKindTask","kindCountry","countriesUrl","getPlayerByKindTask","kindTaskId","kindTask","task","find","t","playerId","taskByTaskUrl","deletePlayer","taskId","delete","DeletePlayer","dataService"],"sources":["C:/Users/User/Desktop/javascript/manchester project/Frontend/src/Services/DataService.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport appConfig from \"../Utils/AppConfig\";\r\nimport TeamModel from \"../Models/TeamModel\";\r\nimport CountryModel from \"../Models/CountryModel\";\r\nimport TableModel from \"../Models/TableModel\";\r\nimport { PlayersActionType, playersStore } from \"../Redux/taskState\";\r\n\r\nclass DataService {\r\n\r\n    async getAllPlayers(): Promise<TeamModel[]> {\r\n        try {\r\n            let players = playersStore.getState().players;\r\n            if (players.length === 0) {\r\n                const response = await axios.get<TeamModel[]>(appConfig.playersUrl);\r\n                players = response.data;\r\n                playersStore.dispatch({ type: PlayersActionType.FetchPlayers, payload: players })\r\n            }\r\n            return players;\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    async getTopGoalScorers(): Promise<TeamModel[]> {\r\n        try {\r\n            let players = playersStore.getState().topPlayers;\r\n            if (players.length === 0) {\r\n                const response = await axios.get<TeamModel[]>(appConfig.topPlayerGoalsUrl);\r\n                players = response.data;\r\n                playersStore.dispatch({ type: PlayersActionType.FetchTopPlayers, payload: players })\r\n            }\r\n            return players;\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    async getTopAssists(): Promise<TeamModel[]> {\r\n        try {\r\n            let players = playersStore.getState().topPlayers;\r\n            if (players.length === 0) {\r\n                const response = await axios.get<TeamModel[]>(appConfig.topPlayerAssistsUrl);\r\n                players = response.data;\r\n                playersStore.dispatch({ type: PlayersActionType.FetchTopAssists, payload: players })\r\n            }\r\n            return players;\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    async getTheTable(): Promise<TableModel[]> {\r\n        \r\n        try {\r\n            let table = playersStore.getState().table;\r\n            if (table.length === 0) {\r\n                const response = await axios.get<TableModel[]>(appConfig.tableUrl);\r\n                table = response.data;\r\n                playersStore.dispatch({ type: PlayersActionType.FetchTable, payload: table })              \r\n            }\r\n            return table;\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    async getAllTasksByKindTask(): Promise<CountryModel[]> {\r\n        try {\r\n            let kindCountry = playersStore.getState().kindCountry;\r\n            const response = await axios.get<CountryModel[]>(appConfig.countriesUrl);\r\n            kindCountry = response.data;\r\n            return kindCountry;\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    async getPlayerByKindTask(kindTaskId: number): Promise<TeamModel[]> {\r\n        let kindTask = playersStore.getState().players\r\n        let task = kindTask.find(t => t.playerId === kindTaskId)\r\n        if (!task) {\r\n            const response = await axios.get<TeamModel[]>(appConfig.taskByTaskUrl + kindTaskId);\r\n            kindTask = response.data;\r\n        }\r\n        return kindTask;\r\n    }\r\n\r\n    async deletePlayer(taskId: number): Promise<void> {\r\n        try {\r\n            await axios.delete(appConfig.playersUrl + taskId);\r\n            playersStore.dispatch({ type: PlayersActionType.DeletePlayer, payload: taskId })\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n}\r\nconst dataService = new DataService();\r\nexport default dataService;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}