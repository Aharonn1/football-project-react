{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\javascript\\\\Project React Tasks 3\\\\Frontend\\\\src\\\\Components\\\\DataArea\\\\DataList\\\\DataList.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport dataService from \"../../../Services/DataService\";\nimport DataCard from \"../DataCard/DataCard\";\nimport { tasksStore } from \"../../../Redux/taskState\";\nimport \"./DataList.css\";\nimport React from \"react\";\nimport Pagination from \"../Pagination/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataList() {\n  _s();\n  const [tasks, setTask] = useState([]);\n  const [text, setText] = React.useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postPerPage] = useState(3);\n  useEffect(() => {\n    dataService.getAllTasks2().then(task => setTask(task)).catch(err => console.log(err));\n    tasksStore.subscribe(() => {\n      const dup = [...tasksStore.getState().tasks.filter(task => !task.isArchived && !dataService.isMoreThanWeekFromNow(task))];\n      setTask(dup);\n    });\n  }, []);\n  async function toggleArchivedTasks() {\n    await dataService.getAllTask().then(task => setTask(task)).catch(err => console.log(err));\n    tasksStore.subscribe(() => {\n      const dup = [...tasksStore.getState().tasks.filter(task => new Date(task.startDate))];\n      setTask(dup);\n    });\n  }\n  async function deleteClickedTask(taskId) {\n    await dataService.deleteTask(taskId);\n    const duplicatedMovies = [...tasks];\n    const index = duplicatedMovies.findIndex(t => t.taskId === taskId);\n    duplicatedMovies.splice(index, 1);\n    setTask(duplicatedMovies);\n  }\n  const handleOnClick1 = () => {\n    const findTasks = tasks && (tasks === null || tasks === void 0 ? void 0 : tasks.length) > 0 ? tasks === null || tasks === void 0 ? void 0 : tasks.filter(s => (s === null || s === void 0 ? void 0 : s.name) === text) : undefined;\n    setTask(findTasks);\n  };\n  const indexOfLastPost = currentPage * postPerPage;\n  const indexOfFirstPost = indexOfLastPost - postPerPage;\n  const currentPost = tasks.slice(indexOfFirstPost, indexOfLastPost);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DataList box\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row row-cols-1 row-cols-md-6 g-4 wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"search task\",\n          value: text,\n          onChange: e => {\n            setText(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !text,\n          onClick: handleOnClick1,\n          children: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), tasks && (tasks === null || tasks === void 0 ? void 0 : tasks.length) === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notFound\",\n          children: \"The task is not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleArchivedTasks,\n        children: \"Toggle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), currentPost.map(item => /*#__PURE__*/_jsxDEV(DataCard, {\n        task: item,\n        deleteMe: deleteClickedTask\n      }, item.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 44\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        totalPost: tasks.length,\n        postPerPage: postPerPage,\n        currentPage: currentPage,\n        setCurrentPage: setCurrentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(DataList, \"a0b4jon0KPQMV4TFBD+hbf1vtIY=\");\n_c = DataList;\nexport default DataList;\nvar _c;\n$RefreshReg$(_c, \"DataList\");","map":{"version":3,"names":["useState","useEffect","dataService","DataCard","tasksStore","React","Pagination","DataList","tasks","setTask","text","setText","currentPage","setCurrentPage","postPerPage","getAllTasks2","then","task","catch","err","console","log","subscribe","dup","getState","filter","isArchived","isMoreThanWeekFromNow","toggleArchivedTasks","getAllTask","Date","startDate","deleteClickedTask","taskId","deleteTask","duplicatedMovies","index","findIndex","t","splice","handleOnClick1","findTasks","length","s","name","undefined","indexOfLastPost","indexOfFirstPost","currentPost","slice","e","target","value","map","item"],"sources":["C:/Users/User/Desktop/javascript/Project React Tasks 3/Frontend/src/Components/DataArea/DataList/DataList.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport TaskModel from \"../../../Models/TaskModel\";\nimport dataService from \"../../../Services/DataService\";\nimport DataCard from \"../DataCard/DataCard\";\nimport { tasksStore } from \"../../../Redux/taskState\";\nimport \"./DataList.css\";\nimport React from \"react\";\nimport Pagination from \"../Pagination/Pagination\";\n\nfunction DataList(): JSX.Element {\n\n    const [tasks, setTask] = useState<TaskModel[]>([]);\n    const [text, setText] = React.useState<string>('');\n    const [currentPage, setCurrentPage] = useState(1);\n    const [postPerPage] = useState(3);\n\n    useEffect(() => {\n        dataService.getAllTasks2()\n            .then(task => setTask(task))\n            .catch(err => console.log(err))\n        tasksStore.subscribe(() => {\n            const dup = [...tasksStore.getState().tasks.filter((task: TaskModel) => (!task.isArchived && !dataService.isMoreThanWeekFromNow(task)))];\n            setTask(dup);\n        })\n    }, [])\n\n    async function toggleArchivedTasks(): Promise<void> {\n        await dataService.getAllTask()\n            .then(task => setTask(task))\n            .catch(err => console.log(err))\n            tasksStore.subscribe(() => {\n                const dup = [...tasksStore.getState().tasks.filter(task => (new Date(task.startDate) ))];\n                setTask(dup);\n            })\n    }\n\n    async function deleteClickedTask(taskId: number) {\n        await dataService.deleteTask(taskId);\n        const duplicatedMovies = [...tasks];\n        const index = duplicatedMovies.findIndex(t => t.taskId === taskId);\n        duplicatedMovies.splice(index, 1);\n        setTask(duplicatedMovies);\n    }\n\n    const handleOnClick1 = () => {\n        const findTasks =\n            tasks && tasks?.length > 0 ? tasks?.filter((s) => s?.name === text) : undefined\n        setTask(findTasks)\n    }\n\n    const indexOfLastPost = currentPage * postPerPage;\n    const indexOfFirstPost = indexOfLastPost - postPerPage;\n    const currentPost = tasks.slice(indexOfFirstPost, indexOfLastPost);\n\n\n    return (\n        <div className=\"DataList box\">\n            <div className=\"row row-cols-1 row-cols-md-6 g-4 wrapper\">\n                <div className=\"input_wrapper\">\n                    <input type=\"text\" placeholder=\"search task\" value={text}\n                        onChange={(e) => {\n                            setText(e.target.value);\n                        }}/>\n                    <button disabled={!text} onClick={handleOnClick1}>search</button>\n                    {tasks && tasks?.length === 0 && (\n                        <div className=\"notFound\">The task is not found</div>\n                    )}\n                </div>\n                <br />\n                <button onClick={toggleArchivedTasks}>Toggle</button>\n                <br />\n                {currentPost.map((item) => <DataCard key={item.taskId} task={item} deleteMe={deleteClickedTask} />)}\n                <br />\n                {<Pagination totalPost={tasks.length} postPerPage={postPerPage} currentPage={currentPage} setCurrentPage={setCurrentPage} />}\n\n            </div>\n        </div>\n    );\n}\nexport default DataList"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}