{"ast":null,"code":"import { createStore } from \"redux\";\nexport class PlayersState {\n  constructor() {\n    this.players = [];\n    this.topPlayers = [];\n    this.table = [];\n    this.kindCountry = [];\n  }\n}\nexport let PlayersActionType;\n(function (PlayersActionType) {\n  PlayersActionType[\"FetchKindCountries\"] = \"FetchKindCountries\";\n  PlayersActionType[\"FetchPlayers\"] = \"FetchPlayers\";\n  PlayersActionType[PlayersActionType[\"FetchTopAssists\"] = FetchTopPlayers = \"FetchTopPlayers\"] = \"FetchTopAssists\";\n  PlayersActionType[\"FetchTable\"] = \"FetchTable\";\n  PlayersActionType[\"AddPlayer\"] = \"AddPlayer\";\n  PlayersActionType[\"DeletePlayer\"] = \"DeletePlayer\";\n  PlayersActionType[\"UpdatePlayer\"] = \"UpdatePlayer\";\n})(PlayersActionType || (PlayersActionType = {}));\nexport function playersReducer() {\n  let currentState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new PlayersState();\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const newState = {\n    ...currentState\n  };\n  switch (action.type) {\n    case PlayersActionType.FetchPlayers:\n      newState.players = action.payload;\n      break;\n    case PlayersActionType.FetchTopPlayers:\n      if (action.payload.length > 0) {\n        const topPlayers = action.payload.sort((a, b) => b.goals - a.goals);\n        const top5Players = topPlayers.slice(0, 5);\n        return {\n          ...currentState,\n          topPlayers: top5Players\n        };\n      }\n      break;\n    case PlayersActionType.FetchTopAssists:\n      if (action.payload.length > 0) {\n        const topPlayers = action.payload.sort((a, b) => b.goals - a.goals);\n        const top5Players = topPlayers.slice(0, 5);\n        return {\n          ...currentState,\n          topPlayers: top5Players\n        };\n      }\n      break;\n    case PlayersActionType.FetchTable:\n      newState.table = action.payload;\n      break;\n    case PlayersActionType.FetchKindCountries:\n      newState.kindCountry = action.payload;\n      break;\n    case PlayersActionType.AddPlayer:\n      if (newState.players.length > 0) {\n        newState.players.push(action.payload);\n      }\n      break;\n    case PlayersActionType.DeletePlayer:\n      const indexToDelete = newState.players.findIndex(t => t.playerId === action.payload);\n      if (indexToDelete >= 0) {\n        newState.players.splice(indexToDelete, 1);\n      }\n      break;\n    case PlayersActionType.UpdatePlayer:\n      const indexToUpdate = newState.players.findIndex(t => t.playerId === action.payload.taskId);\n      if (indexToUpdate >= 0) {\n        newState.players[indexToUpdate] = action.payload;\n      }\n      break;\n  }\n  return newState;\n}\nexport const playersStore = createStore(playersReducer);","map":{"version":3,"names":["createStore","PlayersState","players","topPlayers","table","kindCountry","PlayersActionType","FetchTopPlayers","playersReducer","currentState","action","newState","type","FetchPlayers","payload","length","sort","a","b","goals","top5Players","slice","FetchTopAssists","FetchTable","FetchKindCountries","AddPlayer","push","DeletePlayer","indexToDelete","findIndex","t","playerId","splice","UpdatePlayer","indexToUpdate","taskId","playersStore"],"sources":["C:/Users/User/Desktop/javascript/manchester project/Frontend/src/Redux/taskState.ts"],"sourcesContent":["import { createStore } from \"redux\";\r\nimport TeamModel from \"../Models/TeamModel\";\r\nimport CountryModel from \"../Models/CountryModel\";\r\nimport TableModel from \"../Models/TableModel\";\r\n\r\n\r\nexport class PlayersState {\r\n    players: TeamModel[] = [];\r\n    topPlayers: TeamModel[] =[];\r\n    table: TableModel[] = [];\r\n    kindCountry: CountryModel[] = [];\r\n}\r\n\r\nexport enum PlayersActionType {\r\n    FetchKindCountries = \"FetchKindCountries\",\r\n    FetchPlayers = \"FetchPlayers\",\r\n    FetchTopAssists = \r\n    FetchTopPlayers = \"FetchTopPlayers\",\r\n    FetchTable = \"FetchTable\",\r\n    AddPlayer = \"AddPlayer\",\r\n    DeletePlayer = \"DeletePlayer\",\r\n    UpdatePlayer = \"UpdatePlayer\",\r\n}\r\n\r\nexport interface PlayersAction {\r\n    type: PlayersActionType;\r\n    payload: any\r\n}\r\n\r\nexport function playersReducer(currentState = new PlayersState(), action: PlayersAction): PlayersState {\r\n    const newState = { ...currentState };\r\n\r\n    switch (action.type) {\r\n        case PlayersActionType.FetchPlayers:\r\n            newState.players = action.payload;\r\n            break;\r\n\r\n        case PlayersActionType.FetchTopPlayers:\r\n            if (action.payload.length > 0) {\r\n                const topPlayers = action.payload.sort((a: { goals: number; }, b: { goals: number; }) => b.goals - a.goals);\r\n                const top5Players = topPlayers.slice(0, 5);\r\n                return {\r\n                    ...currentState,\r\n                    topPlayers: top5Players,\r\n                };\r\n            }\r\n            break;\r\n\r\n            case PlayersActionType.FetchTopAssists:\r\n                if (action.payload.length > 0) {\r\n                    const topPlayers = action.payload.sort((a: { goals: number; }, b: { goals: number; }) => b.goals - a.goals);\r\n                    const top5Players = topPlayers.slice(0, 5);\r\n                    return {\r\n                        ...currentState,\r\n                        topPlayers: top5Players,\r\n                    };\r\n                }\r\n                break;\r\n\r\n        case PlayersActionType.FetchTable:\r\n            newState.table = action.payload;\r\n            break;\r\n\r\n        case PlayersActionType.FetchKindCountries:\r\n            newState.kindCountry = action.payload;\r\n            break;\r\n\r\n        case PlayersActionType.AddPlayer:\r\n            if (newState.players.length > 0) {\r\n                newState.players.push(action.payload)\r\n            }\r\n            break;\r\n\r\n        case PlayersActionType.DeletePlayer:\r\n            const indexToDelete = newState.players.findIndex(t => t.playerId === action.payload)\r\n            if (indexToDelete >= 0) {\r\n                newState.players.splice(indexToDelete, 1)\r\n            }\r\n            break;\r\n\r\n        case PlayersActionType.UpdatePlayer:\r\n            const indexToUpdate = newState.players.findIndex(t => t.playerId === action.payload.taskId)\r\n            if (indexToUpdate >= 0) {\r\n                newState.players[indexToUpdate] = action.payload;\r\n            }\r\n            break;\r\n    }\r\n    return newState;\r\n}\r\n\r\nexport const playersStore = createStore(playersReducer)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}