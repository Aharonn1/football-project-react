{"ast":null,"code":"import { createStore } from \"redux\";\nexport class TaskState {\n  constructor() {\n    this.tasks = [];\n    this.kindTask = [];\n  }\n}\nexport let TaskActionType;\n(function (TaskActionType) {\n  TaskActionType[\"FetchKindTasks\"] = \"FetchKindTasks\";\n  TaskActionType[\"FetchTasks\"] = \"FetchTasks\";\n  TaskActionType[\"AddTask\"] = \"AddTask\";\n  TaskActionType[\"DeleteTask\"] = \"DeleteTask\";\n  TaskActionType[\"UpdateTask\"] = \"UpdateTask\";\n})(TaskActionType || (TaskActionType = {}));\nexport function taskReducer() {\n  let currentState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new TaskState();\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const newState = {\n    ...currentState\n  };\n  switch (action.type) {\n    case TaskActionType.FetchTasks.lastIndexOf(action):\n      newState.tasks = action.payload;\n      break;\n    case TaskActionType.FetchKindTasks:\n      newState.kindTask = action.payload;\n      break;\n    case TaskActionType.AddTask:\n      if (newState.tasks.length > 0) {\n        newState.tasks.push(action.payload);\n      }\n      break;\n    case TaskActionType.DeleteTask:\n      const indexToDelete = newState.tasks.findIndex(t => t.taskId === action.payload);\n      if (indexToDelete >= 0) {\n        newState.tasks.splice(indexToDelete, 1);\n      }\n      break;\n    case TaskActionType.UpdateTask:\n      const indexToUpdate = newState.tasks.findIndex(t => t.taskId === action.payload.taskId);\n      if (indexToUpdate >= 0) {\n        newState.tasks[indexToUpdate] = action.payload;\n      }\n      break;\n  }\n  return newState;\n}\nexport const tasksStore = createStore(taskReducer);","map":{"version":3,"names":["createStore","TaskState","tasks","kindTask","TaskActionType","taskReducer","currentState","action","newState","type","FetchTasks","lastIndexOf","payload","FetchKindTasks","AddTask","length","push","DeleteTask","indexToDelete","findIndex","t","taskId","splice","UpdateTask","indexToUpdate","tasksStore"],"sources":["C:/Users/User/Desktop/javascript/Project React Tasks 3/Frontend/src/Redux/taskState.ts"],"sourcesContent":["import { createStore } from \"redux\";\r\nimport TaskModel from \"../Models/TaskModel\";\r\nimport kindTask from \"../Models/KindTaskModel\";\r\n\r\nexport class TaskState {\r\n    tasks: TaskModel[] = [];\r\n    kindTask: kindTask[] = [];\r\n}\r\n\r\nexport enum TaskActionType {\r\n    FetchKindTasks = \"FetchKindTasks\",\r\n    FetchTasks = \"FetchTasks\",\r\n    AddTask = \"AddTask\",\r\n    DeleteTask = \"DeleteTask\",\r\n    UpdateTask = \"UpdateTask\",\r\n}\r\n\r\nexport interface TasksAction {\r\n    type: TaskActionType;\r\n    payload: any\r\n}\r\n\r\nexport function taskReducer(currentState = new TaskState(), action: TasksAction): TaskState {\r\n    const newState = { ...currentState };\r\n\r\n    switch (action.type) {\r\n        case TaskActionType.FetchTasks.lastIndexOf(action):\r\n            newState.tasks = action.payload;\r\n            break;\r\n\r\n        case TaskActionType.FetchKindTasks:\r\n            newState.kindTask = action.payload;\r\n            break;\r\n\r\n        case TaskActionType.AddTask:\r\n            if (newState.tasks.length > 0) {\r\n                newState.tasks.push(action.payload)\r\n            }\r\n            break;\r\n\r\n        case TaskActionType.DeleteTask:\r\n            const indexToDelete = newState.tasks.findIndex(t => t.taskId === action.payload)\r\n            if (indexToDelete >= 0) {\r\n                newState.tasks.splice(indexToDelete, 1)\r\n            }\r\n            break;\r\n\r\n        case TaskActionType.UpdateTask:\r\n            const indexToUpdate = newState.tasks.findIndex(t => t.taskId === action.payload.taskId)\r\n            if (indexToUpdate >= 0) {\r\n                newState.tasks[indexToUpdate] = action.payload;\r\n            }\r\n            break;\r\n    }\r\n    return newState;\r\n}\r\nexport const tasksStore = createStore(taskReducer)"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AAInC,OAAO,MAAMC,SAAS,CAAC;EAAA;IAAA,KACnBC,KAAK,GAAgB,EAAE;IAAA,KACvBC,QAAQ,GAAe,EAAE;EAAA;AAC7B;AAEA,WAAYC,cAAc;AAMzB,WANWA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;AAAA,GAAdA,cAAc,KAAdA,cAAc;AAa1B,OAAO,SAASC,WAAW,GAAiE;EAAA,IAAhEC,YAAY,uEAAG,IAAIL,SAAS,EAAE;EAAA,IAAEM,MAAmB;EAC3E,MAAMC,QAAQ,GAAG;IAAE,GAAGF;EAAa,CAAC;EAEpC,QAAQC,MAAM,CAACE,IAAI;IACf,KAAKL,cAAc,CAACM,UAAU,CAACC,WAAW,CAACJ,MAAM,CAAC;MAC9CC,QAAQ,CAACN,KAAK,GAAGK,MAAM,CAACK,OAAO;MAC/B;IAEJ,KAAKR,cAAc,CAACS,cAAc;MAC9BL,QAAQ,CAACL,QAAQ,GAAGI,MAAM,CAACK,OAAO;MAClC;IAEJ,KAAKR,cAAc,CAACU,OAAO;MACvB,IAAIN,QAAQ,CAACN,KAAK,CAACa,MAAM,GAAG,CAAC,EAAE;QAC3BP,QAAQ,CAACN,KAAK,CAACc,IAAI,CAACT,MAAM,CAACK,OAAO,CAAC;MACvC;MACA;IAEJ,KAAKR,cAAc,CAACa,UAAU;MAC1B,MAAMC,aAAa,GAAGV,QAAQ,CAACN,KAAK,CAACiB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAKd,MAAM,CAACK,OAAO,CAAC;MAChF,IAAIM,aAAa,IAAI,CAAC,EAAE;QACpBV,QAAQ,CAACN,KAAK,CAACoB,MAAM,CAACJ,aAAa,EAAE,CAAC,CAAC;MAC3C;MACA;IAEJ,KAAKd,cAAc,CAACmB,UAAU;MAC1B,MAAMC,aAAa,GAAGhB,QAAQ,CAACN,KAAK,CAACiB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAKd,MAAM,CAACK,OAAO,CAACS,MAAM,CAAC;MACvF,IAAIG,aAAa,IAAI,CAAC,EAAE;QACpBhB,QAAQ,CAACN,KAAK,CAACsB,aAAa,CAAC,GAAGjB,MAAM,CAACK,OAAO;MAClD;MACA;EAAM;EAEd,OAAOJ,QAAQ;AACnB;AACA,OAAO,MAAMiB,UAAU,GAAGzB,WAAW,CAACK,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}